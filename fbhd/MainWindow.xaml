<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:fbhd"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" xmlns:ec="http://schemas.microsoft.com/expression/2010/controls" xmlns:pi="http://schemas.microsoft.com/prototyping/2010/interactivity" x:Name="window" x:Class="fbhd.MainWindow"
        mc:Ignorable="d"
        Title="FBDL-GUI" Height="453.151" Width="605.592" Background="Black" Loaded="Window_Loaded" SnapsToDevicePixels="True" DataContext="{StaticResource fakedatacontext}" TextOptions.TextFormattingMode="Display" WindowStyle="None" AllowsTransparency="True" ResizeMode="NoResize" UseLayoutRounding="True" WindowStartupLocation="CenterScreen" Icon="media/lines-rubby.png" PreviewMouseDown="window_PreviewMouseDown" Topmost="False">

    <Window.Resources>
        <local:TaskStatusToTaskBarProgressState x:Key="TaskStatusToTaskBarProgressState"/>
        <local:BooleanToVisibilityInverted x:Key="BooleanToVisibilityInverted"/>
        <local:TaskObjToPropertiesVisibility x:Key="TaskObjToPropertiesVisibility"/>
        <local:objectCast x:Key="objectCast"/>
        <local:EmptyTextConverter x:Key="EmptyTextConverter"/>
        <local:InvertBool x:Key="InvertBool"/>

        <!-- End of Flat ComboBox -->


        <local:taskTitlesToListOfPairsMi x:Key="taskTitlesToListOfPairsMi"/>
        <local:taskToAvailableResolutions x:Key="taskToAvailableResolutions"/>
        <local:SelectedTasksToFirstItem x:Key="SelectedTasksToFirstItem"/>
        <AlternationConverter x:Key="AlternationConverter"/>
        <local:SelectedTasksToUIVisibilityConverter x:Key="SelectedTasksToUIVisibilityConverter1"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1"/>
        <local:SelectedTasksToUIVisibilityConverter x:Key="SelectedTasksToUIVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
        <Style x:Key="GroupBoxStyle1" TargetType="{x:Type GroupBox}">
            <Setter Property="BorderBrush" Value="#D5DFE5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="6"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="6"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
                                <Border.OpacityMask>
                                    <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                        <Binding ElementName="Header" Path="ActualWidth"/>
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Border.OpacityMask>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"/>
                            </Border>
                            <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TextBoxBorder" StartPoint="0,0" MappingMode="Absolute" EndPoint="0,20">
            <GradientStop Color="#ABADB3" Offset="0.05"/>
            <GradientStop Color="#E2E3EA" Offset="0.07"/>
            <GradientStop Color="#E3E9EF" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="TextBox_flat" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <Rectangle Fill="{x:Null}" Margin="0" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding BorderThickness.Bottom, RelativeSource={RelativeSource TemplatedParent}}" StrokeLineJoin="Bevel"/>
                            <Grid Margin="1">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" VerticalAlignment="Stretch" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Border/>
                                </ScrollViewer>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>


        <ControlTemplate x:Key="TextBoxControlTemplate1" TargetType="{x:Type TextBox}">
            <Grid/>
        </ControlTemplate>
        <ControlTemplate x:Key="TextBoxControlTemplate2" TargetType="{x:Type TextBox}">
            <Grid>
                <TextBox x:Name="textBox" Margin="0,10,37,0" Style="{DynamicResource SimpleTextBox}" TextWrapping="Wrap" Text="TextBox"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="buttonPlus" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF333333"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="2" Height="8" Background="{TemplateBinding Foreground}"/>
                <Grid Margin="0" Width="8" HorizontalAlignment="Center" VerticalAlignment="Center" Height="2" Background="{TemplateBinding Foreground}"/>
            </Grid>
        </ControlTemplate>
        <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#E1E1E1" Offset="0"/>
            <GradientStop Color="#EDEDED" Offset="0.20"/>
            <GradientStop Color="#EDEDED" Offset="0.80"/>
            <GradientStop Color="#E3E3E3" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid Background="#00000000">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="regularPolygon">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF3399FF"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="regularPolygon">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF007ACC"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ed:RegularPolygon x:Name="regularPolygon" Fill="#FF646464" HorizontalAlignment="Stretch" Height="Auto" InnerRadius="1" Margin="3,5" PointCount="3" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#E1E1E1" Offset="0"/>
            <GradientStop Color="#EDEDED" Offset="0.20"/>
            <GradientStop Color="#EDEDED" Offset="0.80"/>
            <GradientStop Color="#E3E3E3" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ThumbControlTemplate1" TargetType="{x:Type Thumb}">
            <Grid Background="#00666666">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF666666"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid x:Name="grid" Margin="4,0" VerticalAlignment="Stretch" Background="#FF333333"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="ScrollBarStyle3" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource SimpleThumbStyle}" Themes:ScrollChrome.ScrollGlyph="VerticalGripper" Template="{DynamicResource ThumbControlTemplate1}" Background="#00F0F0F0"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="DownArrow" RenderTransformOrigin="0.5,0.5">
                                <RepeatButton.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                        <SkewTransform AngleY="0" AngleX="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ScrollBarControlTemplate1" TargetType="{x:Type ScrollBar}">
            <Grid>
                <RepeatButton x:Name="repeatButton" Content="RepeatButton" Height="18" Margin="0" Style="{DynamicResource SimpleScrollRepeatButtonStyle}" VerticalAlignment="Top" Background="#FF646464" BorderBrush="Transparent" Width="18"/>
                <RepeatButton x:Name="repeatButton_Copy" Content="RepeatButton" Height="18" Margin="0" Style="{DynamicResource SimpleScrollRepeatButtonStyle}" VerticalAlignment="Bottom" Background="#FF646464" BorderBrush="Transparent" Width="18"/>
                <Track Height="Auto" Margin="0,18" VerticalAlignment="Stretch"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="scrolfalt" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Background="#FF040405" Style="{DynamicResource ScrollBarStyle3}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource ScrollBarStyle2}"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="#FF101011"/>
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#FF161616">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="DownArrow" RenderTransformOrigin="0.5,0.5">
                                <RepeatButton.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                        <SkewTransform AngleY="0" AngleX="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ScrollBarButton2" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle2" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="DownArrow"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ScrollBarButton3" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ButtonImportList" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="image" Margin="0" Source="media/blank-file-4-16 (2)-bright-snaped-list.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="None"/>
                <Grid x:Name="grid1" Margin="0" Background="#47000000"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="buttonmp3" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="image" Source="media/mp3-cool-yellow.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="None" ClipToBounds="True" ToolTip="mp3 task" Margin="0"/>
                <Grid x:Name="grid1" Margin="0" Background="#47000000" d:IsHidden="True"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="buttonmp3text" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <TextBlock x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="MP3" HorizontalAlignment="Center" VerticalAlignment="Center" TextOptions.TextFormattingMode="Display" FontSize="10.667" FontFamily="Digital-7" Foreground="Orange"/>
                <Grid x:Name="grid1" Margin="0" Background="#47000000" d:IsHidden="True"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="buttmp4text" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <TextBlock x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="MP4" HorizontalAlignment="Center" VerticalAlignment="Center" TextOptions.TextFormattingMode="Display" FontSize="8" FontFamily="Digital-7" Foreground="Violet"/>
                <Grid x:Name="grid1" Margin="0" Background="#47000000" d:IsHidden="True"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="buttmp4" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="image" Source="media/mp4-cool.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="None" ClipToBounds="True" ToolTip="mp3 task" Margin="0"/>
                <Grid x:Name="grid1" Margin="0" Background="#47000000" d:IsHidden="True"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="musicbutt" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="image" Source="media/music-snaped.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="Uniform" ClipToBounds="True" ToolTip="mp3 task" Width="11" Height="11"/>
                <Grid x:Name="grid1" Margin="0" Background="#59000000" d:IsHidden="True"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="121" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="image" Source="media/mp3-cool-yellow.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="None" ClipToBounds="True" ToolTip="mp3 task"/>
                <Grid x:Name="grid1" Margin="0" Background="#4C000000"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="buttclose" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF333333"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="1.5" Height="14" Background="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="45"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                </Grid>
                <Grid Margin="0" Width="14" HorizontalAlignment="Center" VerticalAlignment="Center" Height="1.5" Background="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="45"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                </Grid>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="butt_minimize" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF333333"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Margin="0,8,0,0" Width="10" HorizontalAlignment="Center" VerticalAlignment="Center" Height="2" Background="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                </Grid>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="butt_open_title_piker" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF333333"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Margin="0" Width="5" HorizontalAlignment="Center" VerticalAlignment="Center" Height="5" Background="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                </Grid>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonFolder" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="image" Source="media/folder-16-16.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="None" ClipToBounds="True" ToolTip="mp3 task"/>
                <Grid x:Name="grid1" Margin="0" Background="#4C000000"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="Button_image" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="image" Source="media/image-16-16.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="None" ClipToBounds="True" ToolTip="mp3 task"/>
                <Grid x:Name="grid1" Margin="0" Background="#4C000000"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="preerences" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="image" Source="media/sett-2.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="None" ClipToBounds="True" ToolTip="mp3 task"/>
                <Grid x:Name="grid1" Margin="0" Background="#4C000000"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="aqablueButt" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Background="#FF303030">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF7B427E">
                                        <EasingColorKeyFrame.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </EasingColorKeyFrame.EasingFunction>
                                    </EasingColorKeyFrame>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF7B427E">
                                        <EasingColorKeyFrame.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </EasingColorKeyFrame.EasingFunction>
                                    </EasingColorKeyFrame>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                    <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF6A3C6C"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Rectangle Fill="{x:Null}" Height="Auto" Margin="0" Stroke="Red" VerticalAlignment="Stretch" Visibility="Hidden"/>
                <TextBlock x:Name="textBlock" Height="Auto" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" Foreground="#FFD1D1D1" TextOptions.TextFormattingMode="Display" HorizontalAlignment="Center"/>
            </Grid>
        </ControlTemplate>
        <local:TaskStatusToUIvisibility x:Key="TaskStatusToUIvisibility"/>
        <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid>

                            <!-- This Border is the track. It must be named PART_Track -->
                            <Border x:Name="PART_Track" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2"/>

                            <!-- This Border shows progress. It must be named PART_Indicator for the control to function -->
                            <Border HorizontalAlignment="Left" x:Name="PART_Indicator" Background="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="2"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="0" RadiusX="0" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="icon" HorizontalAlignment="Stretch" Margin="0,0,0,1" Width="14" Height="14" Source="media/elet-14-grey-filled-mi.png"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}"/>
                <Trigger Property="IsChecked" Value="True"/>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Fill" TargetName="Bg">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#34C5EBFF" Offset="0"/>
                                <GradientStop Color="#3481D8FF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="starmenuitem" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="0" RadiusX="0" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="icon" HorizontalAlignment="Stretch" Margin="5,3,5,4" Width="14" Height="14" Source="media/star-14-grey-filled-mi.png"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}"/>
                <Trigger Property="IsChecked" Value="True"/>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Fill" TargetName="Bg">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#34C5EBFF" Offset="0"/>
                                <GradientStop Color="#3481D8FF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MenuItemControlTemplat_skip" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="0" RadiusX="0" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="icon" HorizontalAlignment="Stretch" Margin="0,0,0,1" Width="14" Height="14" Source="media/enter-grey14-14.png"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}"/>
                <Trigger Property="IsChecked" Value="True"/>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Fill" TargetName="Bg">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#34C5EBFF" Offset="0"/>
                                <GradientStop Color="#3481D8FF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyleFlatBlack" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- The ToggleButton is databound to the ComboBox itself to toggle IsDropDownOpen -->
                            <ToggleButton Grid.Column="2" Template="{DynamicResource ToggleButtonControlTemplateFlatBlack}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Background="#FF343434" Foreground="#FFD1D1D1" BorderBrush="#FF727272" Visibility="Visible"/>
                            <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" Visibility="Hidden"/>

                            <!-- The TextBox must be named PART_EditableTextBox or ComboBox will not recognize it -->
                            <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}" BorderBrush="#FFB90303"/>

                            <!-- The Popup shows the list of items in the ComboBox. IsOpen is databound to IsDropDownOpen which is toggled via the ComboBoxToggleButton -->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" Background="#FF323131" BorderBrush="#FF707070" BorderThickness="1"/>
                                    <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">

                                        <!-- The StackPanel is used to display the children by setting IsItemsHost to be True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>

                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- This forces the DropDown to have a minimum size if it is empty -->
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                                <Setter Property="CornerRadius" Value="4" TargetName="DropDownBorder"/>
                                <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                                <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ToggleButtonControlTemplateFlatBlack" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="0" RadiusY="0" Stroke="#FF2F2F37" Fill="#00000000"/>
                <Rectangle Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="0" RadiusY="0" Fill="#001B1B1B" Stroke="#FF2F2F37"/>
                <Path Grid.Column="1" HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="#FF929292" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Rectangle"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Rectangle"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle"/>
                    <Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle"/>
                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                    <Setter Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxItemStyleFlatBlack" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ControlStylefocusflat" TargetType="{x:Type Control}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Fill="Black"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxItemStyle1cont" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="DataTemplate1itemflat">
            <Grid/>
        </DataTemplate>
        <Style x:Key="ControlStyletestflat" TargetType="{x:Type Control}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplateflat">
            <StackPanel IsItemsHost="True"/>
        </ItemsPanelTemplate>



        <!-- Flat ComboBox -->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" x:Name="Border"
        			BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
        			CornerRadius="0" BorderThickness="1, 1, 1, 1" 
        			Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" x:Name="ButtonBorder"
        			CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
        			Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path x:Name="Arrow" Grid.Column="1" 
        			Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
        			HorizontalAlignment="Center" Fill="#444"
        			VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" Grid.Column="2"
        						ClickMode="Press" Focusable="False"
        						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        						Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter x:Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
        						HorizontalAlignment="Left" VerticalAlignment="Center"                              
        						Content="{TemplateBinding SelectionBoxItem}" 
        						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        						ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox x:Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
        						IsReadOnly="{TemplateBinding IsReadOnly}"
        						Visibility="Hidden" Background="Transparent"
        						HorizontalAlignment="Left" VerticalAlignment="Center"
        						Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="{x:Type TextBox}" >
                                        <Border x:Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup x:Name="Popup" Placement="Bottom"
        						Focusable="False" AllowsTransparency="True"
        						IsOpen="{TemplateBinding IsDropDownOpen}"
        						PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True"
        							MinWidth="{TemplateBinding ActualWidth}"
        							MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
        								CornerRadius="0" BorderThickness="1,1,1,1" 
        								BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxFlatStyle_miVersion"  TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="#FFB6B6B6"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" Grid.Column="2"
        						ClickMode="Press" Focusable="False"
        						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        						Template="{DynamicResource ToggleButtonControlTemplateflattt}" Background="Black"/>

                            <ContentPresenter x:Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
        						HorizontalAlignment="Left" VerticalAlignment="Center"                              
        						Content="{TemplateBinding SelectionBoxItem}" 
        						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        						ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox x:Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
        						IsReadOnly="{TemplateBinding IsReadOnly}"
        						Visibility="Visible" Background="Transparent"
        						HorizontalAlignment="Left" VerticalAlignment="Center"
        						Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="{x:Type TextBox}" >
                                        <Border x:Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup x:Name="Popup" Placement="Bottom"
        						Focusable="False" AllowsTransparency="True"
        						IsOpen="{TemplateBinding IsDropDownOpen}"
        						PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True"
        							MinWidth="{TemplateBinding ActualWidth}"
        							MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#FF212121" Margin="0, 1, 0, 0"
        								CornerRadius="0" BorderThickness="1,1,1,1" 
        								BorderBrush="#FF4F4F4F"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ToggleButtonControlTemplateflattt" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" x:Name="Border"
        			BorderBrush="#FF2F2F37" 
        			CornerRadius="0" BorderThickness="1, 1, 1, 1" 
        			Background="Black" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#FF2F2F37" x:Name="ButtonBorder"
        			CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
        			Background="#FF040404" />

                <Path x:Name="Arrow" Grid.Column="1" 
        			Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
        			HorizontalAlignment="Center" Fill="#FF929292"
        			VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="Border" Value="#FF43434F"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#FF3A3A3A"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#FF3A3A3A"/>
                    <Setter Property="Fill" TargetName="Arrow" Value="#FFB5C1C9"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="powerStyleButt" TargetType="{x:Type Button}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="10" Height="24">
                <Grid Height="24">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="23"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="image" HorizontalAlignment="Center" Height="Auto" Margin="7.25,12,30,10" VerticalAlignment="Center" Source="media/power-white2.png" Width="16" Visibility="Collapsed" Grid.Column="1"/>
                    <Grid x:Name="POWER" Margin="5,4,3,4" Width="Auto" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <ed:Arc ArcThickness="1.5" ArcThicknessUnit="Pixel" EndAngle="330" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Height="15" Margin="0" Stretch="None" Stroke="{x:Null}" StartAngle="30" Width="15" StrokeThickness="0" d:LayoutOverrides="TopMargin, BottomMargin" VerticalAlignment="Center"/>
                        <Grid HorizontalAlignment="Center" Margin="0,-1,0,0" Width="1" Height="5" Background="{TemplateBinding Foreground}" VerticalAlignment="Top"/>
                    </Grid>
                    <Border Margin="1,-1,-1,0" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="1" Height="24" BorderThickness="1" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" Width="53">
                        <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="Server" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFB6B6B6"/>
                    </Border>
                </Grid>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="ToggleButtonpOWER" TargetType="{x:Type ToggleButton}">
            <Border x:Name="borderExt" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="0" Height="Auto" Margin="0" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition">
                <Grid Height="24">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="23"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="POWER" Margin="5,4,3,4" Width="Auto" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <ed:Arc x:Name="arc" ArcThickness="1.5" ArcThicknessUnit="Pixel" EndAngle="330" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Height="15" Margin="0" Stretch="None" Stroke="{x:Null}" StartAngle="30" Width="15" StrokeThickness="0" d:LayoutOverrides="TopMargin, BottomMargin" VerticalAlignment="Center"/>
                        <Grid x:Name="dash" HorizontalAlignment="Center" Margin="0,-1,0,0" Width="1" Height="5" Background="{TemplateBinding Foreground}" VerticalAlignment="Top"/>
                    </Grid>
                    <Border x:Name="borderCaption" Margin="1,-1,-1,0" VerticalAlignment="Stretch" HorizontalAlignment="Left" Grid.Column="1" Height="Auto" BorderThickness="1" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" Width="Auto">
                        <TextBlock x:Name="caption" TextWrapping="Wrap" Text="{TemplateBinding Content}" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Margin="4,0"/>
                    </Border>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"  Value="true" >
                    <Setter TargetName="borderExt" Property="BorderBrush" Value="#7F74DA6F" />
                    <Setter TargetName="borderCaption" Property="BorderBrush" Value="#7F74DA6F" />

                    <Setter TargetName="borderCaption" Property="Background" Value="#FF323232" />
                    <Setter TargetName="borderExt" Property="Background" Value="#FF2D5B2C" />

                    <Setter TargetName="dash" Property="Background" Value="#FFC0F7BD" />
                    <Setter TargetName="arc" Property="Fill" Value="#FFC0F7BD" />
                    <Setter TargetName="caption" Property="Foreground" Value="#FFC0F7BD" />


                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="SearchingTextBoxTemplate" TargetType="{x:Type TextBox}">
            <Grid>
                <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="2" CornerRadius="2">

                    <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
                    <Grid>
                        <Image Source="media/search-13-white.png" Width="13" Height="13" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="0.8"/>
                        <TextBlock Text="Search Videos" Foreground="Gray" Visibility="{Binding Text, Converter={StaticResource EmptyTextConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="2,0,0,0" />
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" Style="{DynamicResource SimpleScrollViewer}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                    </Grid>

                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" Value="#FFBDBDBD" TargetName="Border"/>

                </Trigger>
            </ControlTemplate.Triggers>

        </ControlTemplate>

        <Style x:Key="searchTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="2" CornerRadius="2">

                                <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
                                <Grid>
                                    <Image Source="media/search-13-white.png" Width="13" Height="13" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="0.8"/>
                                    <ScrollViewer Margin="0" x:Name="PART_ContentHost" Style="{DynamicResource SimpleScrollViewer}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                                </Grid>

                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" Value="#FFBDBDBD" TargetName="Border"/>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="miSwitch" TargetType="{x:Type ToggleButton}">
            <Grid Background="#00000000">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Stretch" Width="Auto" VerticalAlignment="Center"/>
                <Grid x:Name="sw" HorizontalAlignment="Stretch" Margin="2,0,0,0" Width="Auto" Grid.Column="1" VerticalAlignment="Center" Opacity="0.8">
                    <Rectangle x:Name="rec" Fill="{x:Null}" Margin="0" Stroke="{TemplateBinding Foreground}" RadiusX="7" HorizontalAlignment="Stretch" Width="Auto" RadiusY="7" StrokeThickness="1.5" Height="16"/>

                    <ed:Arc x:Name="circ" ArcThickness="8" ArcThicknessUnit="Pixel" EndAngle="360" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="4,0,0,0" Stretch="None" Stroke="{x:Null}" StartAngle="0" Width="8" VerticalAlignment="Center" Height="8"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>

                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Opacity" TargetName="sw" Value="1"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true" >

                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="circ"   Duration="4" >
                                    <SplineThicknessKeyFrame KeyTime="0:0:00.1" Value="16,0,0,0" KeySpline="0.58,0,0.38,1"/>

                                </ThicknessAnimationUsingKeyFrames>

                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="circ" Storyboard.TargetProperty="Fill.Color">
                                    <SplineColorKeyFrame KeyTime="0:0:00.1" Value="#FFFFF409"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="circ"   Duration="4" >
                                    <SplineThicknessKeyFrame KeyTime="0:0:00.1" Value="4,0,0,0" KeySpline="0.62,0,0.31,1"/>

                                </ThicknessAnimationUsingKeyFrames>

                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="circ" Storyboard.TargetProperty="Fill.Color">
                                    <SplineColorKeyFrame KeyTime="0:0:00.1" Value="#FFB8B8B8" KeySpline="0.68,0.27,0.36,0.82"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>

                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        <LinearGradientBrush x:Key="MenuBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F6F6F6" Offset="0.25"/>
            <GradientStop Color="#EAE8E8" Offset="0.25"/>
            <GradientStop Color="#DCD9D9" Offset="0.8"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="flatdarkMenu" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="#FFD5D5D5"/>

            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="DataTemplate1">
            <Grid/>
        </DataTemplate>
        <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}"/>
        <ControlTemplate x:Key="MenuItemParent" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="OuterBorder" RadiusY="2" RadiusX="2"/>
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Margin="1" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                <Rectangle x:Name="InnerBorder" Margin="2"/>
                <DockPanel>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <Path x:Name="GlyphPanel" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </DockPanel>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
                    <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                        <Border x:Name="SubMenuBorder" BorderBrush="#FF575757" BorderThickness="1" Background="Black">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Margin="1,0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="Black" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="Black" HorizontalAlignment="Left" Margin="1,2" RadiusY="2" RadiusX="2" Width="28"/>
                                    <Rectangle Fill="#FF1D1D1D" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <Rectangle Fill="Black" HorizontalAlignment="Left" Margin="30,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
                    <Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF"/>
                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                    <Setter Property="Fill" TargetName="Bg">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#28717070" Offset="0"/>
                                <GradientStop Color="#50717070" Offset="0.75"/>
                                <GradientStop Color="#90717070" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                </Trigger>
                <Trigger Property="IsSubmenuOpen" Value="True">
                    <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                    <Setter Property="Fill" TargetName="Bg">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#28717070" Offset="0"/>
                                <GradientStop Color="#50717070" Offset="0.75"/>
                                <GradientStop Color="#90717070" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF848589"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <DataTemplate x:Key="DataTemplate2">
            <Grid/>
        </DataTemplate>
        <Style x:Key="MenuItemStyle2" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Padding" Value="7,2,8,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Padding" Value="7,2,8,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Padding" Value="2,3,2,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Padding" Value="2,3,2,3"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="MenuItemControlTemplate2" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                <Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <Border x:Name="GlyphPanel" BorderBrush="#FFCDD3E6" BorderThickness="1" Background="#FFE6EFF4" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
                        <Path x:Name="Glyph" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="#FF0C12A1" FlowDirection="LeftToRight" Height="11" Width="9"/>
                    </Border>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Fill" TargetName="Bg">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#34C5EBFF" Offset="0"/>
                                <GradientStop Color="#3481D8FF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#40FFFFFF"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                    <Setter Property="Background" TargetName="GlyphPanel" Value="#FFEEE9E9"/>
                    <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#FFDBD6D6"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="#FF848589"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate  x:Key="FilterUI_TitleTemplate" TargetType="{x:Type local:FilterControl}">
            <Grid x:Name="PART_MAIN_GRID" Height="Auto" d:LayoutOverrides="TopPosition, BottomPosition" Background="#00000000">
                <Grid.Effect>
                    <ee:BloomEffect x:Name="bloom" BloomIntensity="0" BaseSaturation="1" BaseIntensity="1" BloomSaturation="0" Threshold="0.5"/>
                </Grid.Effect>
                <Border x:Name="border" BorderBrush="#FFB9B9B9" BorderThickness="1" Padding="2,0,0,0" Margin="0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="17"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="textBlock1_Copy1" Margin="0,-6.44,15.75,-6.48" TextWrapping="Wrap" Text="{Binding Caption, RelativeSource={RelativeSource TemplatedParent}}" Foreground="#FFD6CFCF" VerticalAlignment="Center"/>
                        <Button x:Name="PART_DROP_BUTTON" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="1" Background="#00000000" BorderBrush="#00707070" Focusable="False" >
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </ControlTemplate>
                            </Button.Template>
                            <Image x:Name="PART_IMAGE_DROP" Margin="0" Width="16" Height="16"  Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Button>

                    </Grid>
                </Border>
                <Popup x:Name="PART_POPUP" StaysOpen="False" Tag="closed">
                    <Border Height="Auto" Width="96" BorderBrush="#FF4B4B4B" BorderThickness="1">
                        <Grid Height="48">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="21"/>
                            </Grid.RowDefinitions>
                            <local:ButtonMi x:Name="PART_DELETE" HorizontalAlignment="Left" Margin="4,3,0,2" VerticalAlignment="Center" textcaption="Delete Filter" iconSource="media/x-16-white.png" Grid.Row="1" d:LayoutOverrides="Height" Click="deletebutt_Click" captionVisibility="Visible" Width="Auto"/>
                            <Grid Height="Auto" Margin="0" VerticalAlignment="Top" Width="Auto" Background="#006C6A6A">

                                <TextBox x:Name="PART_ARG1" Height="Auto" Margin="2" TextWrapping="Wrap" Text="" VerticalAlignment="Bottom" Style="{DynamicResource SimpleTextBox}" Background="Black" BorderBrush="#FF2F2F37" Foreground="#FFD6D6D6"/>
                            </Grid>
                        </Grid>
                    </Border>
                </Popup>

            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFE0E0E0" />
                </Trigger>
                <Trigger Property="IsActivated" Value="false">
                    <Setter Property="Effect" TargetName="PART_MAIN_GRID"   >
                        <Setter.Value>
                            <ee:BloomEffect BloomIntensity="0.55" BaseSaturation="0" BaseIntensity="0" BloomSaturation="0" Threshold="0.5" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FilterUI_DurationFilterTemplate" TargetType="{x:Type local:FilterControl}">
            <Grid x:Name="PART_MAIN_GRID" Height="Auto" d:LayoutOverrides="TopPosition, BottomPosition" Background="#00000000">
                <Grid.Effect>
                    <ee:BloomEffect x:Name="bloom" BloomIntensity="0" BaseSaturation="1" BaseIntensity="1" BloomSaturation="0" Threshold="0.5"/>
                </Grid.Effect>
                <Border x:Name="border" BorderBrush="#FFB9B9B9" BorderThickness="1" Padding="2,0,0,0" Margin="0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="17"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="textBlock1_Copy1" Margin="0,-6.44,15.75,-6.48" TextWrapping="Wrap" Text="{Binding Caption, RelativeSource={RelativeSource TemplatedParent}}" Foreground="#FFD6CFCF" VerticalAlignment="Center"/>
                        <Button x:Name="PART_DROP_BUTTON" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="1" Background="#00000000" BorderBrush="#00707070" Focusable="False" >
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </ControlTemplate>
                            </Button.Template>
                            <Image x:Name="PART_IMAGE_DROP" Margin="0" Width="16" Height="16"  Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Button>

                    </Grid>
                </Border>
                <Popup x:Name="PART_POPUP" StaysOpen="False">
                    <Border Height="Auto" Width="96" BorderBrush="Gray" BorderThickness="1">
                        <Grid Height="79">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="21"/>
                            </Grid.RowDefinitions>
                            <local:ButtonMi x:Name="PART_DELETE" HorizontalAlignment="Left" Margin="4,3,0,2" VerticalAlignment="Center" textcaption="Delete Filter" iconSource="media/redx-16-red2.png" Grid.Row="1" d:LayoutOverrides="Height" Click="deletebutt_Click"/>
                            <StackPanel Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto" Background="#006C6A6A">

                                <Grid Height="23" Margin="2,4,2,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="39"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="min_lbl" HorizontalAlignment="Stretch" Margin="4,4,11,4" TextWrapping="Wrap" Text="min:" Width="Auto" Foreground="#FFD1D1D1" VerticalAlignment="Center" d:LayoutOverrides="Width"/>

                                    <TextBox x:Name="PART_ARG1" Height="Auto" TextWrapping="Wrap" Text="10:00" VerticalAlignment="Center" Style="{DynamicResource SimpleTextBox}" Background="Black" BorderBrush="#FF2F2F37" Foreground="#FFD6D6D6" Margin="0" HorizontalAlignment="Stretch" Width="Auto" Grid.Column="1" TextAlignment="Center"/>

                                </Grid>
                                <Grid Height="23" Margin="2,4,2,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="39"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="max_lbl1" HorizontalAlignment="Stretch" Margin="4,-4,10,-3" TextWrapping="Wrap" Text="max:" Width="Auto" Foreground="#FFD1D1D1" VerticalAlignment="Center"/>

                                    <TextBox x:Name="PART_ARG2" Height="Auto" TextWrapping="Wrap" Text="-" VerticalAlignment="Center" Style="{DynamicResource SimpleTextBox}" Background="Black" BorderBrush="#FF2F2F37" Foreground="#FFD6D6D6" Margin="0" HorizontalAlignment="Stretch" Width="Auto" Grid.Column="1" TextAlignment="Center"/>

                                </Grid>
                            </StackPanel>

                        </Grid>
                    </Border>
                </Popup>

            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFE0E0E0" />
                </Trigger>
                <Trigger Property="IsActivated" Value="false">
                    <Setter Property="Effect" TargetName="PART_MAIN_GRID"   >
                        <Setter.Value>
                            <ee:BloomEffect BloomIntensity="0.55" BaseSaturation="0" BaseIntensity="0" BloomSaturation="0" Threshold="0.5" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="FilterUIDatePostedFilterTemplate" TargetType="{x:Type local:FilterControl}">
            <Grid  x:Name="PART_MAIN_GRID" Height="Auto" d:LayoutOverrides="TopPosition, BottomPosition" Background="#00000000">
                <Grid.Effect>
                    <ee:BloomEffect x:Name="bloom" BloomIntensity="0" BaseSaturation="1" BaseIntensity="1" BloomSaturation="0" Threshold="0.5"/>
                </Grid.Effect>
                <Border x:Name="border" BorderBrush="#FFB9B9B9" BorderThickness="1" Padding="2,0,0,0" Margin="0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="17"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="textBlock1_Copy1" Margin="0,-6.44,15.75,-6.48" TextWrapping="Wrap" Text="{Binding Caption, RelativeSource={RelativeSource TemplatedParent}}" Foreground="#FFD6CFCF" VerticalAlignment="Center"/>
                        <Button x:Name="PART_DROP_BUTTON" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="1" Background="#00000000" BorderBrush="#00707070" Focusable="False" >
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </ControlTemplate>
                            </Button.Template>
                            <Image x:Name="PART_IMAGE_DROP" Margin="0" Width="16" Height="16"  Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Button>

                    </Grid>
                </Border>
                <Popup x:Name="PART_POPUP" StaysOpen="False">
                    <Border Height="56" Width="96" BorderBrush="#FF5F5F5F" BorderThickness="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="21"/>
                            </Grid.RowDefinitions>
                            <local:ButtonMi x:Name="PART_DELETE" HorizontalAlignment="Left" Margin="4,3,0,2" VerticalAlignment="Center" textcaption="Delete Filter" iconSource="media/redx-16-red2.png" Grid.Row="1" d:LayoutOverrides="Height" Click="deletebutt_Click"/>
                            <TextBox x:Name="PART_ARG1" Height="18" Margin="12,0,4,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Bottom"/>
                        </Grid>
                    </Border>
                </Popup>

            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFE0E0E0" />
                </Trigger>
                <Trigger Property="IsActivated" Value="false">
                    <Setter Property="Effect" TargetName="PART_MAIN_GRID"   >
                        <Setter.Value>
                            <ee:BloomEffect BloomIntensity="0.55" BaseSaturation="0" BaseIntensity="0" BloomSaturation="0" Threshold="0.5" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="RadioTabSwitchMi" TargetType="{x:Type local:RadioWithIcon}">
            <Grid x:Name="mainGrid" Background="{TemplateBinding Background}">
                <ed:RegularPolygon x:Name="triangle"  Fill="{TemplateBinding Background}" HorizontalAlignment="Right" Height="Auto" InnerRadius="1" Margin="0,0,-14,0" PointCount="3" Stretch="Fill" Stroke="{x:Null}" RenderTransformOrigin="0.5,0.5" Width="28">
                    <ed:RegularPolygon.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="-1" ScaleX="1"/>
                            <SkewTransform AngleY="0" AngleX="0"/>
                            <RotateTransform Angle="0"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </ed:RegularPolygon.RenderTransform>
                </ed:RegularPolygon>

                <Grid Height="16" Margin="4,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="IconPart" Source="{TemplateBinding Icon}"  Margin="0" VerticalAlignment="Center"  HorizontalAlignment="Center" Width="16" Height="16"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1"/>

                </Grid>
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,0,0,0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="false">
                    <Setter Property="Fill" TargetName="triangle" Value="Transparent" />
                    <Setter Property="Background" TargetName="mainGrid" Value="Transparent" />

                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="miMenu" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="#00000000">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <ControlTemplate x:Key="MenuItemControlTemplate3" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="OuterBorder" RadiusY="2" RadiusX="2"/>
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Margin="1" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                <Rectangle x:Name="InnerBorder" Margin="2"/>
                <DockPanel>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <Path x:Name="GlyphPanel" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </DockPanel>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
                    <Border x:Name="SubMenuBorder" BorderBrush="#FF2F2F37" BorderThickness="1" Background="Black">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Margin="1,0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid >

                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True"/>
                <Trigger Property="IsHighlighted" Value="True">
                    <!---Setter Property="Stroke" TargetName="Bg" Value="#90717070"/-->
                    <Setter Property="Fill" TargetName="Bg" Value="#FF282828"/>

                    <!---Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/-->
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True"/>
                <Trigger Property="IsSubmenuOpen" Value="True">
                    <!---Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/-->
                    <!---Setter Property="Fill" TargetName="Bg" Value="Black"/-->


                    <!---Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/-->
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF6D6D6D"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF6D6D6D"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False"/>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type MenuItem}" x:Key="miMenuItemStyle">
            <Setter Property="Template" Value="{StaticResource MenuItemControlTemplate3}"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />


        </Style>
        <ControlTemplate x:Key="MenuItemChildTypeTemplate" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                <Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2" Stroke="Transparent" StrokeThickness="1"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <Border x:Name="GlyphPanel" BorderBrush="{x:Null}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
                        <Path x:Name="Glyph" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="#FFE0E0E0" FlowDirection="LeftToRight" Height="11" Width="9"/>
                    </Border>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}" Visibility="Collapsed"/>
                    <Path x:Name="tri" Grid.Column="5" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" Margin="4,0,0,0" VerticalAlignment="Center"/>
                </Grid>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                    <Border x:Name="SubMenuBorder" BorderBrush="#FF2F2F37" BorderThickness="1" Background="Black">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Margin="1,0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid >

                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter Property="Visibility" TargetName="tri" Value="Collapsed"/>
                    <Setter Property="StaysOpenOnClick" Value="true"/>

                </Trigger>
                <Trigger Property="UsesItemContainerTemplate" Value="false">
                    <Setter Property="Visibility" TargetName="tri" Value="Collapsed"/>
                </Trigger>

                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>

                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Fill" TargetName="Bg" Value="#FF282828"/>
                    <Setter Property="Stroke" TargetName="Bg" Value="#FF282828"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF706F6F"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="#FF434345"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False"/>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type MenuItem}" x:Key="miMenuItemChildTtypeStyle">
            <Setter Property="Template" Value="{StaticResource MenuItemChildTypeTemplate}"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />

        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplateMi">
            <StackPanel IsItemsHost="True" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
        </ItemsPanelTemplate>
        <Style x:Key="MenuItemItemsContanerMi" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Padding" Value="7,2,8,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Padding" Value="7,2,8,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Padding" Value="2,3,2,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Padding" Value="2,3,2,3"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="pinToggle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Margin="0" Width="Auto" Height="Auto" VerticalAlignment="Stretch" Background="#00000000">
                            <Image x:Name="activePinImage" Margin="0" Source="media/pin-2-13BRIGHT-orange.png" Width="13" Height="13" Visibility="collapsed" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Image x:Name="whitePinImage" Margin="0" Source="media/pin-2-13BRIGHT.png" Width="13" Height="13" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="activePinImage"  Value="visible"/>
                                <Setter Property="Visibility" TargetName="whitePinImage"  Value="collapsed"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Opacity" Value="0.85"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="miseparator" TargetType="{x:Type Separator}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Grid Margin="0,6,0,4" SnapsToDevicePixels="true" UseLayoutRounding="False">
                            <Rectangle Fill="#FF2F2F37" Height="1" Margin="30,0,1,1"/>
                            <Rectangle Fill="#FF2F2F37" Height="1" Margin="30,1,1,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressValue="{Binding SelectedTask.downloadingPercent, FallbackValue=0}" ProgressState="{Binding SelectedTask.Status, Converter={StaticResource TaskStatusToTaskBarProgressState}}"/>
    </Window.TaskbarItemInfo>
    <Grid>
        <Border Margin="0" BorderBrush="#FF2F2F37" BorderThickness="1">
            <Grid x:Name="main">

                <Grid x:Name="dragable" Height="36.818" Margin="0,-1,0,0" VerticalAlignment="Top" DragOver="dragable_DragOver" Background="#00000000" MouseDown="dragable_MouseDown" />
                <Grid x:Name="windowHeader" Height="27" VerticalAlignment="Top">
                    <Grid x:Name="grd_windowTitle" Margin="0,0,0,5" HorizontalAlignment="Left" Width="173">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="28*"/>
                            <ColumnDefinition Width="145*"/>
                        </Grid.ColumnDefinitions>
                        <Image x:Name="ICOn" Margin="0,0,6,0" VerticalAlignment="Center" Source="media/lines-rubby.png" Width="16" Height="16"/>
                        <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="0" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="#FF929292" Grid.Column="1"><Run Text="FBDL (GUI)"/></TextBlock>
                    </Grid>
                    <Grid x:Name="grd_windowControls" Margin="0,3,0,1" HorizontalAlignment="Right" Width="69">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="exitButton" Content="Button" Template="{DynamicResource buttclose}" Background="#FF040405" Foreground="#FFD5D5D5" VerticalAlignment="Center" Margin="0" Grid.Column="2" Width="16" Height="16" HorizontalAlignment="Center" Click="exitButton_Click"/>
                        <Button x:Name="butt_minimize" Content="Button" Template="{DynamicResource butt_minimize}" Background="#FF040405" Foreground="#FFD5D5D5" VerticalAlignment="Center" Margin="0,1" Grid.Column="1" Width="16" Height="16" HorizontalAlignment="Center" Click="butt_minimize_Click"/>
                        <local:ButtonMi x:Name="pinWindowButt" HorizontalAlignment="Stretch" Margin="3,4,5,3" VerticalAlignment="Stretch" iconSource="media/pin-2-13BRIGHT-blue.png" Width="Auto" Foreground="#FF3399FF" Click="pinWindowButt_Click" Visibility="Collapsed"/>
                        <ToggleButton x:Name="onTopToggle" Content="ToggleButton" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16" Style="{DynamicResource pinToggle}" IsChecked="{Binding Topmost, ElementName=window}"/>
                    </Grid>
                    <TextBox x:Name="tb_search" Foreground="#FFC7C7C7" Background="{x:Null}" BorderBrush="#FF2F2F37" TextOptions.TextFormattingMode="Display" SnapsToDevicePixels="True" CaretBrush="#FFEAEAEA" Margin="0,3,74,0" TextChanged="tb_property_title_TextChanged" HorizontalAlignment="Right" Width="121" Template="{DynamicResource SearchingTextBoxTemplate}"/>
                </Grid>
                <Menu x:Name="menu" Height="24" VerticalAlignment="Top"  Margin="0,27,0,0" Style="{DynamicResource miMenu}"   >


                    <MenuItem Header="Task" Style="{DynamicResource miMenuItemStyle}" ItemsPanel="{DynamicResource ItemsPanelTemplateMi}" ItemContainerStyle="{DynamicResource MenuItemItemsContanerMi}" UsesItemContainerTemplate="True" >

                        <MenuItem Header="New" Style="{DynamicResource miMenuItemChildTtypeStyle}" Click="addButton_Click"/>
                        <MenuItem Header="Parse all" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                        <MenuItem Header="Download all" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                        <MenuItem Header="Delete all" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                        <MenuItem Header="Export Input list" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>

                        <MenuItem Header="Copy to Clip" Style="{StaticResource miMenuItemChildTtypeStyle}" UsesItemContainerTemplate="True" >

                            <MenuItem Header="ffmpeg command" Style="{DynamicResource miMenuItemChildTtypeStyle}" />

                            <MenuItem Header="post url" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                            <MenuItem Header="thumb url" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>

                            <MenuItem Header="video url" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                            <MenuItem Header="audio url" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                            <MenuItem Header="output location" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="Options" Style="{DynamicResource miMenuItemStyle}">
                        <MenuItem Header="Globale output directory" Style="{DynamicResource miMenuItemChildTtypeStyle}" UsesItemContainerTemplate="True">
                            <MenuItem Header="Select Folder" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                            <Separator Foreground="#FF854545" Background="#FFA42C2C" Style="{DynamicResource miseparator}"/>
                            <MenuItem Header="C:\TOOLS\fbhd-gui"/>
                            <MenuItem Header="C:\TOOLS\fbhd-gui\fbhd-songs 04-2021"/>
                        </MenuItem>
                        <MenuItem Header="Override behavior" Style="{DynamicResource miMenuItemChildTtypeStyle}" UsesItemContainerTemplate="true">

                        </MenuItem>
                        <MenuItem Header="Download Raw Streams" Style="{DynamicResource miMenuItemChildTtypeStyle}" IsCheckable="true"/>
                        <MenuItem Header="Use chuncked download" Style="{DynamicResource miMenuItemChildTtypeStyle}" IsCheckable="true"/>
                        <MenuItem Header="Download with" Style="{DynamicResource miMenuItemChildTtypeStyle}" UsesItemContainerTemplate="true">
                            <MenuItem Header="cURL" Style="{DynamicResource miMenuItemChildTtypeStyle}" IsCheckable="true"/>
                            <MenuItem Header="Windows Powershell" Style="{DynamicResource miMenuItemChildTtypeStyle}" IsCheckable="true"/>
                            <MenuItem Header="Ffmpeg" Style="{DynamicResource miMenuItemChildTtypeStyle}" IsCheckable="true"/>
                        </MenuItem>

                    </MenuItem>
                    <MenuItem Header="Presets" Style="{DynamicResource miMenuItemStyle}">
                        <MenuItem x:Name="loadListWatcherPresetButt" Header="Load ListWatcher Preset" Style="{DynamicResource miMenuItemChildTtypeStyle}" Click="loadListWatcherPresetButt_Click"/>
                    </MenuItem>
                    <MenuItem Header="Tools" Style="{DynamicResource miMenuItemStyle}">
                        <MenuItem x:Name="Custom_List_Watcher_Wizard" Header="Custom List Watcher Wizard" Style="{DynamicResource miMenuItemChildTtypeStyle}" Click="fsdmnewswatchButt_Click" IsCheckable="True" Checked="fsdmnewswatchButt_Checked" Unchecked="fsdmnewswatchButt_Unchecked"/>
                        <MenuItem x:Name="testwindowmuit" Header="__dev__show__window" Style="{DynamicResource miMenuItemChildTtypeStyle}" Click="testwindowmuit_Click"/>
                    </MenuItem>
                    <MenuItem Header="Server" Style="{DynamicResource miMenuItemStyle}">


                        <MenuItem Header="Activated" IsCheckable="True" IsChecked="True" Style="{DynamicResource miMenuItemChildTtypeStyle}" StaysOpenOnClick="True"/>
                        <MenuItem Header="Advanced UI" IsCheckable="True" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                        <MenuItem Header="Options.." Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                    </MenuItem>
                    <MenuItem Header="Help" Style="{DynamicResource miMenuItemStyle}">
                        <MenuItem x:Name="CmdLineHelpMenuItem" Header="Command line help" Style="{DynamicResource miMenuItemChildTtypeStyle}" Click="CmdLineHelpMenuItem_Click"/>
                        <MenuItem Header="Presets help" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                        <MenuItem x:Name="AboutMenuItem" Header="About" Click="AboutMenuItem_Click" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                    </MenuItem>
                    <MenuItem Header="Dev_" Style="{DynamicResource miMenuItemStyle}" Visibility="Collapsed">
                        <MenuItem x:Name="devShowNotification" Header="ShowNotification" Style="{DynamicResource miMenuItemChildTtypeStyle}" Click="devShowNotification_Click"/>
                        <MenuItem x:Name="devRemoveLatestNewsItem" Header="RemoveLatestNewsItem" Style="{DynamicResource miMenuItemChildTtypeStyle}" Click="devRemoveLatestNewsItem_Click"/>
                        <MenuItem x:Name="devActivateXMLLW" Header="XMLLW toggle" Style="{DynamicResource miMenuItemChildTtypeStyle}" Click="devActivateXMLLW_Click"/>
                        <MenuItem x:Name="devFakeCheck" Header="FakeCheck" Click="devFakeCheck_Click" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                        <MenuItem x:Name="menuItem" Header="toggle regex tester" IsCheckable="True" Style="{DynamicResource miMenuItemChildTtypeStyle}"/>
                        <MenuItem x:Name="prettifyXmlDoc" Header="Prettify" Style="{DynamicResource miMenuItemChildTtypeStyle}" Click="prettifyXmlDoc_Click"/>
                        <MenuItem x:Name="factoryConfigButt" Header="factory config" Style="{DynamicResource miMenuItemChildTtypeStyle}" Click="factoryConfigButt_Click"/>
                    </MenuItem>
                </Menu>
                <Grid x:Name="toolbox_grd" Height="27" Margin="10,55,2,0" VerticalAlignment="Top">
                    <ToggleButton x:Name="server_toggle" Content="Server OFF" HorizontalAlignment="Right" Margin="0,4,0,0" Template="{DynamicResource ToggleButtonpOWER}" Background="Black" BorderBrush="#FF2F2F37" Foreground="#FF7A837A" Visibility="Collapsed"/>
                    <StackPanel x:Name="toolBox" Margin="0,0,69,4" Orientation="Horizontal" Background="Black">
                        <local:ButtonMi x:Name="start_butt_Copy" HorizontalAlignment="Center" Margin="2,0" VerticalAlignment="Center" Width="Auto" iconSource="media/new-item-16-white-thick-smaller.png" textcaption="New" captionVisibility="Visible" Click="addButton_Click" captionMargin="2,0,0,0"/>
                        <Grid x:Name="separator_Copy" Margin="4,0" Width="3" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Grid x:Name="line1" Margin="0" Width="1" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#FF46464A"/>
                        </Grid>

                        <local:ButtonMi x:Name="start_butt" HorizontalAlignment="Center" Margin="2,0" VerticalAlignment="Center" Width="Auto" iconSource="media/start-perfect-white-16-black-bck.png" textcaption="Start" captionVisibility="Visible"/>
                        <local:ButtonMi x:Name="Parse_butt" HorizontalAlignment="Center" Margin="4,0,2,0" VerticalAlignment="Center" Width="Auto" iconSource="media/parse_code16.png" textcaption="Parse" captionVisibility="Visible" captionMargin="4,0,2,0" OverridesDefaultStyle="True" PreviewMouseLeftButtonUp="Parse_butt_PreviewMouseLeftButtonUp" isDisabled="{Binding HasSelection, Converter={StaticResource InvertBool}, FallbackValue=true, Mode=OneWay}"/>
                        <local:ButtonMi x:Name="Run_ffmpeg" HorizontalAlignment="Center" Margin="2,0" VerticalAlignment="Center" Width="Auto" iconSource="media/down-16-white.png" textcaption="Download" captionVisibility="Visible" captionMargin="4,0,2,0" OverridesDefaultStyle="True" PreviewMouseLeftButtonUp="Run_ffmpeg_PreviewMouseLeftButtonUp" isDisabled="{Binding SelectedTask.IsResolved, Converter={StaticResource InvertBool}, FallbackValue=true}" Click="Run_ffmpeg_Click"/>
                        <Grid x:Name="separator_Copy1" Margin="4,0" Width="3" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Grid x:Name="line2" Margin="0" Width="1" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#FF46464A"/>
                        </Grid>
                        <local:ButtonMi x:Name="SetglobalOutputButt" HorizontalAlignment="Center" Margin="2,0" VerticalAlignment="Center" Width="16" iconSource="media/folder-16-white.png" textcaption="" captionVisibility="Visible" captionMargin="4,0,2,0" OverridesDefaultStyle="True" PreviewMouseLeftButtonUp="Run_ffmpeg_PreviewMouseLeftButtonUp" Tag="thumb" Click="OutpuFolderButt_Click"/>
                        <ComboBox x:Name="comboBox" Margin="2,0" Background="Black" BorderBrush="#FF2F2F37" Style="{DynamicResource mi_flat_combo}" Width="80" ToolTip="Overriding behaviour" SelectedIndex="0">
                            <ComboBoxItem Content="Override" />
                            <ComboBoxItem Content="Enumerate" Foreground="#FFC5C5C5" Style="{x:Null}" />
                            <ComboBoxItem Content="Skip"/>
                            <ComboBoxItem Content="Prompt"/>
                        </ComboBox>
                        <Grid x:Name="separator_Copy3" Margin="4,1.5" Width="3" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Grid x:Name="line4" Margin="0" Width="1" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#FF46464A"/>
                        </Grid>
                        <local:ButtonMi x:Name="cp_command_butt" HorizontalAlignment="Center" Margin="4,3.5,0,3.5" VerticalAlignment="Center" Width="16" iconSource="media/copy-16-white-commandline.png" textcaption="" captionVisibility="Visible" captionMargin="4,0,2,0" OverridesDefaultStyle="True" PreviewMouseLeftButtonUp="Run_ffmpeg_PreviewMouseLeftButtonUp" isDisabled="{Binding SelectedTask.IsResolved, Converter={StaticResource InvertBool}, FallbackValue=true}" Click="copy_to_clip_button" Tag="command"/>
                        <local:ButtonMi x:Name="copy_video_butt" HorizontalAlignment="Center" Margin="0,3.5" VerticalAlignment="Center" Width="16" iconSource="media/copy-16-white-V.png" textcaption="" captionVisibility="Visible" captionMargin="4,0,2,0" OverridesDefaultStyle="True" PreviewMouseLeftButtonUp="Run_ffmpeg_PreviewMouseLeftButtonUp" isDisabled="{Binding SelectedTask.IsResolved, Converter={StaticResource InvertBool}, FallbackValue=true}" Click="copy_to_clip_button" Tag="video"/>
                        <local:ButtonMi x:Name="cp_audio_butt" HorizontalAlignment="Center" Margin="0,3.5" VerticalAlignment="Center" Width="16" iconSource="media/copy-16-white-A-shifted.png" textcaption="" captionVisibility="Visible" captionMargin="4,0,2,0" OverridesDefaultStyle="True" PreviewMouseLeftButtonUp="Run_ffmpeg_PreviewMouseLeftButtonUp" isDisabled="{Binding SelectedTask.IsResolved, Converter={StaticResource InvertBool}, FallbackValue=true}" Click="copy_to_clip_button" Tag="audio"/>
                        <local:ButtonMi x:Name="cp_thumb_butt" HorizontalAlignment="Center" Margin="0,3.5,4,3.5" VerticalAlignment="Center" Width="16" iconSource="media/copy-16-white-T.png" textcaption="" captionVisibility="Visible" captionMargin="4,0,2,0" OverridesDefaultStyle="True" PreviewMouseLeftButtonUp="Run_ffmpeg_PreviewMouseLeftButtonUp" isDisabled="{Binding SelectedTask.IsResolved, Converter={StaticResource InvertBool}, FallbackValue=true}" Click="copy_to_clip_button" Tag="thumb"/>
                        <Grid x:Name="separator_Copy2" Margin="4,1.5" Width="3" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Grid x:Name="line3" Margin="0" Width="1" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#FF46464A"/>
                        </Grid>
                        <ToggleButton x:Name="toggleButton" Content="Server" Margin="8,0,0,0" Width="66" Template="{DynamicResource ToggleButtonmi2050}" Foreground="#FFFF8811" Checked="toggleButton_Checked" Unchecked="toggleButton_Unchecked" HorizontalAlignment="Left" VerticalAlignment="Center" BorderBrush="#FF707070"/>

                    </StackPanel>

                </Grid>

                <GroupBox x:Name="gb_Input" Header="Input" Margin="10,85,0,25" TextOptions.TextFormattingMode="Display" HorizontalAlignment="Left" Width="203" Style="{DynamicResource GroupBoxStyle1}" Foreground="#FFD5D5D5" BorderBrush="#FF2F2F37" UseLayoutRounding="True">
                    <Grid x:Name="grd_wraper" Margin="5,5,-2,5" UseLayoutRounding="True">
                        <Grid x:Name="controls" Margin="0,10,0,0" VerticalAlignment="Top" Height="18" UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="addButton" Content="Button" Template="{DynamicResource buttonPlus}" Background="#FF040405" Foreground="#FF7DCD79" VerticalAlignment="Center" Margin="0,1" Grid.Column="7" Width="16" Height="16" HorizontalAlignment="Right" Click="addButton_Click" ToolTip="Add new"/>
                            <local:ButtonMi x:Name="savelist" Grid.Column="5" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" d:LayoutOverrides="Height" iconSource="media/save-16-white.png" Width="16" ToolTip="Save list" Visibility="{Binding HasTasks, Converter={StaticResource BooleanToVisibilityConverter}}" Click="savelist_Click"/>
                            <local:ButtonMi x:Name="removeSelected" Grid.Column="4" HorizontalAlignment="Center" Margin="3.5,1" VerticalAlignment="Center" iconSource="media/redx-16-red2.png" Width="16" ToolTip="Remove Item" Visibility="{Binding HasSelection, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" Click="removeSelected_Click"/>
                            <local:ButtonMi x:Name="importListButt" Grid.Column="6" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" d:LayoutOverrides="Height" iconSource="media/blank-file-4-16 (2)-bright-snaped-list.png" Width="Auto" ToolTip="Import list" Click="importListButt_Click"/>
                        </Grid>
                        <ScrollViewer Margin="0,33,0,0" Template="{DynamicResource scrolfalt}" VerticalScrollBarVisibility="Auto" Width="188" HorizontalAlignment="Left" >
                            <ItemsControl x:Name="mainlist" Margin="0" ItemsSource="{Binding Tasks}" Background="#00535353" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top">

                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>


                                        <StackPanel x:Name="StackFBHDTasks" IsItemsHost="True" Orientation="Vertical" Height="Auto" Margin="0" ClipToBounds="True"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate  DataType="local:FBHDTask" >
                                        <Grid Background="#00303030" d:DesignWidth="144" d:DesignHeight="34">
                                            <local:TaskComponent url="{Binding Url}" DataContext="{Binding}" taskStatus="{Binding Status}" isResolved="{Binding IsResolved}"   Height="Auto" isSelected="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinHeight="24"/>

                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>

                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </GroupBox>
                <StackPanel x:Name="grd_Current_selected" Margin="218,95,0,53" Orientation="Vertical" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=TaskWiewTabSwitch, FallbackValue=Collapsed}">
                    <local:TaskInfo x:Name="taskInfo" coreTaskObject="{Binding SelectedTask, Mode=OneWay}" Visibility="{Binding HasSelection, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=visible, Mode=OneWay}" Margin="4,0,10,0" IconAudio="media/wav-32-white-sharp.png" IconImage="media/image-32-white-2-square.png" IconVideo="media/video-32-white-rect.png" MediaType="{Binding SelectedTask.MediaType}"/>
                    <GroupBox x:Name="groupMeta" Header="Properties" Margin="4,10,10,0" BorderBrush="#FF2F2F37" Foreground="#FFD5D5D5" TextOptions.TextFormattingMode="Display" Style="{DynamicResource GroupBoxStyle1}" BorderThickness="1" SnapsToDevicePixels="True" Visibility="{Binding SelectedTask.ShouldShowProperties, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=collapsed}" VerticalAlignment="Top" Padding="0,0,0,15">
                        <StackPanel x:Name="stack_properties" Margin="10,14,-2,-6" Orientation="Vertical" VerticalAlignment="Top">
                            <Grid x:Name="grd_PropertyTitle" Height="34" Margin="10,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16*"/>
                                    <ColumnDefinition Width="71*"/>
                                    <ColumnDefinition Width="9*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="label_Propery" Margin="4,0,0,0" TextWrapping="Wrap" Foreground="#FFCFCFCF" HorizontalAlignment="Left" VerticalAlignment="Center" Text="Title"/>

                                <TextBox x:Name="tb_property_title" Style="{DynamicResource SimpleTextBox}" Foreground="#FFB6B2B2" Background="{x:Null}" BorderBrush="#FF2F2F37" TextOptions.TextFormattingMode="Display" SnapsToDevicePixels="True" CaretBrush="#FFEAEAEA" Margin="18,0,18.455,0" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" Grid.Column="1" VerticalAlignment="Center" TextChanged="tb_property_title_TextChanged" Text="{Binding SelectedTask.TaskProperties.titleSettings.Query, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" GotFocus="tb_property_title_GotFocus" QueryCursor="tb_property_title_QueryCursor" MouseLeftButtonDown="tb_property_title_MouseLeftButtonDown" Loaded="tb_property_title_Loaded" LostFocus="tb_property_title_LostFocus" ManipulationStarted="tb_property_title_ManipulationStarted"/>
                                <Button x:Name="butt_propety_title_piker" Content="Button" Template="{DynamicResource butt_open_title_piker}" Background="#FF040405" Foreground="#FFD5D5D5" Margin="5.478,9,5.479,9" Click="butt_propety_title_piker_Click" Grid.Column="2" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                                <Popup x:Name="popup_titles_picker" Margin="0" StaysOpen="False" HorizontalAlignment="Center" Grid.Column="2" PopupAnimation="Fade" Placement="Center" VerticalAlignment="Center">
                                    <Border HorizontalAlignment="Right" Margin="0" VerticalAlignment="Top" BorderBrush="#FFA09999" BorderThickness="1" Padding="0,8,0,7" >
                                        <local:PopupPickerMi x:Name="titlePopupPickerMi" Picked="PopupPickerMi_Picked" PairItems="{Binding SelectedTask.TaskProperties.titleSettings.AvailableTitles}"/>
                                    </Border>
                                </Popup>
                            </Grid>
                            <Grid x:Name="grd_PropertyTitle_Copy" Height="34" Margin="10,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="117*"/>
                                    <ColumnDefinition Width="129*"/>
                                    <ColumnDefinition Width="30*"/>
                                    <ColumnDefinition Width="29*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="label_Propery1" Margin="4,9.5,0,9.5" TextWrapping="Wrap" Foreground="#FFCFCFCF" Text="Thumbnail" VerticalAlignment="Center"/>
                                <TextBox x:Name="tb_property_title_Copy" Style="{DynamicResource SimpleTextBox}" Foreground="#FFB6B2B2" Background="{x:Null}" BorderBrush="#FF2F2F37" TextOptions.TextFormattingMode="Display" SnapsToDevicePixels="True" CaretBrush="#FFEAEAEA" Margin="-48,6,11,6" Grid.Column="1" VerticalAlignment="Center" Text="{}{Source}"/>
                                <Button x:Name="Butt_pick_thumbnail" Content="Button" Template="{DynamicResource Button_image}" Background="#FF040405" Foreground="#FF7DCD79" Margin="0" SnapsToDevicePixels="True" Tag="mp3" ToolTip="Task type" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Button x:Name="butt_property_customize_thumbnail" Content="Button" Template="{DynamicResource butt_open_title_piker}" Background="#FF040405" Foreground="#FFD5D5D5" Margin="6.478,9,5.479,9" Click="butt_minimize_Click" Grid.Column="3" d:LayoutOverrides="TopMargin, BottomMargin"/>
                            </Grid>
                            <Grid x:Name="grd_PropertyResolution" Height="Auto" Margin="10,0,2,0" Visibility="{Binding SelectedTask.HasVideo, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}">
                                <TextBlock x:Name="lbl" Margin="4,6,0,0" TextWrapping="Wrap" Foreground="#FFCFCFCF" Text="Resolution" VerticalAlignment="Top" HorizontalAlignment="Left" Width="113"/>
                                <local:ResolutionPicker x:Name="resolutionPicker" Height="Auto" Width="Auto" d:LayoutOverrides="Height" Margin="0,26,0,0" Resolutions="{Binding SelectedTask, Converter={StaticResource taskToAvailableResolutions}}" selectedResolution="{Binding SelectedTask.TaskProperties.resolutionSettings.UserPicked, Mode=TwoWay}" PickedResolutionChanged="resolutionPicker_ResolutionPicked" ForegroundPicked="#FF20C9BF"/>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                    <Grid x:Name="dev_types_tests" HorizontalAlignment="Right" Height="216" Margin="0,0,9,0" Width="57">
                        <Button x:Name="set_mkv" Content="mkv" Height="27" Click="set_mkv_Click" VerticalAlignment="Top" Visibility="Collapsed"/>
                        <Button x:Name="set_jpg" Content="jpg" Height="27" Margin="0,27,0,0" Click="set_jpg_Click" VerticalAlignment="Top" Visibility="Collapsed"/>
                        <Button x:Name="set_mp4" Content="mp4" Height="27" Margin="0,54,0,0" Click="set_mp4_Click" VerticalAlignment="Top" Visibility="Collapsed"/>
                        <Button x:Name="set_mp3" Content="mp3" Height="27" Margin="0,81,0,0" Click="set_mp3_Click" VerticalAlignment="Top" Visibility="Collapsed"/>
                        <Button x:Name="set_show" Content="show" Height="27" Margin="0,0,0,81" Click="set_show_Click" VerticalAlignment="Bottom" Visibility="Collapsed"/>
                        <Button x:Name="set_audio" Content="audio" Height="27" Margin="0,0,0,54" Click="set_audio_Click" VerticalAlignment="Bottom" Visibility="Collapsed"/>
                        <Button x:Name="set_vid" Content="video" Height="27" Margin="0,0,0,27" Click="set_vid_Click" VerticalAlignment="Bottom" Visibility="Collapsed"/>
                        <Button x:Name="set_image" Content="image" Height="27" Click="set_image_Click" VerticalAlignment="Bottom" Visibility="Collapsed"/>
                    </Grid>
                </StackPanel>
                <Grid x:Name="searchView_grd" Margin="228,87,10,50" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=searchViewTabSwitch}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="36"/>
                        <RowDefinition Height="36"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <local:SearchQueryControl Margin="5,0" VerticalAlignment="Center" onGo="SearchQueryControl_onGo" onIsEmptyChanged="SearchQueryControl_onIsEmptyChanged" >
                        <local:SearchQueryControl.Template>
                            <ControlTemplate TargetType="local:SearchQueryControl">
                                <Grid Background="#00000000">
                                    <Border x:Name="Border" BorderThickness="1" Padding="2" CornerRadius="0" BorderBrush="#FF2F2F37">

                                        <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
                                        <Grid Height="24" Background="Black">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="18"/>
                                                <ColumnDefinition Width="18"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock x:Name="PART_PLACEHOLDER" Text="Search Videos" Foreground="Gray" Margin="6,4,0,4" Grid.ColumnSpan="1" HorizontalAlignment="Left" VerticalAlignment="Center" />
                                            <TextBox x:Name="PART_TEXTBOX" Foreground="#FFDEDDDD" Background="Transparent" Style="{DynamicResource SimpleTextBox}" Grid.ColumnSpan="1" HorizontalAlignment="Stretch" BorderBrush="{x:Null}" Width="Auto" VerticalAlignment="Center" Margin="0,0,5,0" FontSize="13.333" CaretBrush="#FFDEDEDE" />
                                            <Grid Grid.Column="2" Margin="0" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <local:ButtonMi x:Name="PART_GO_BUTTON" iconSource="media/search-13-white.png" Width="Auto" Height="Auto" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="16" MinHeight="16" MaxWidth="16" MaxHeight="16" Margin="0"/>
                                            </Grid>
                                            <Grid Grid.ColumnSpan="1" Grid.Column="1" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16">
                                                <local:ButtonMi x:Name="PART_RESET_BUTTON" iconSource="media/x-16-white.png" Width="Auto" Height="Auto" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" MinWidth="16" MinHeight="16" MaxWidth="16" MaxHeight="16" d:LayoutOverrides="LeftMargin, RightMargin"/>


                                            </Grid>


                                        </Grid>

                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEmpty" Value="true">
                                        <Setter Property="Visibility" TargetName="PART_PLACEHOLDER" Value="Visible"></Setter>
                                        <Setter Property="Visibility" TargetName="PART_RESET_BUTTON" Value="COLLAPSED"></Setter>

                                    </Trigger>
                                    <Trigger Property="IsEmpty" Value="false">
                                        <Setter Property="Visibility" TargetName="PART_PLACEHOLDER" Value="collapsed"></Setter>
                                        <Setter Property="Visibility" TargetName="PART_RESET_BUTTON" Value="Visible"></Setter>

                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="BorderBrush" Value="#FF40404B" TargetName="Border"/>

                                    </Trigger>

                                </ControlTemplate.Triggers>



                            </ControlTemplate>
                        </local:SearchQueryControl.Template>
                    </local:SearchQueryControl>
                    <Grid Margin="10,7" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="34"/>
                        </Grid.ColumnDefinitions>
                        <WrapPanel x:Name="filtersWrapPanel" Orientation="Horizontal" Margin="0,0,6,0" Visibility="{Binding MainSearch.ShouldShowFiltersSection, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <local:FilterControl x:Name="titleFilter"  IsActivated="True" Caption="Title" Icon="media/regex-blueStar-16.png" Deleted="FilterUI_Deleted" DeleteIcon="media/redx-blue.png" Template="{DynamicResource FilterUI_TitleTemplate}" Margin="4,0" Loaded="titleFilter_Loaded" FilterValueChanged="titleFilter_FilterValueChanged" />
                            <local:FilterControl x:Name="durationFilterUI" IsActivated="True" Caption="Duration" Icon="media/watch-16-white-shifted.png" Deleted="FilterUI_Deleted" DeleteIcon="media/redx-blue.png" Template="{DynamicResource FilterUI_DurationFilterTemplate}" Margin="4,0" FilterValueChanged="durationFilterUI_FilterValueChanged" />
                            <local:FilterControl x:Name="datePostedFilterUI" IsActivated="True" Caption="DatePosted" Icon="media/calend-16-white.png" Deleted="FilterUI_Deleted" DeleteIcon="media/redx-blue.png" Template="{DynamicResource FilterUIDatePostedFilterTemplate}" Margin="4,0" FilterValueChanged="datePostedFilterUI_FilterValueChanged" />
                            <Image x:Name="image" Source="media/filter-add-16-white.png" OpacityMask="#FFDE7D7D" VerticalAlignment="Center" Width="16" Margin="4,0"/>
                        </WrapPanel>
                        <Grid Grid.Column="1" Margin="0" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <local:ButtonMi x:Name="resetSearchBffer" Margin="0,0,-1,0" VerticalAlignment="Center" Width="Auto" textcaption=" " iconSource="media/delete-16-white.png" HorizontalAlignment="Center" Visibility="{Binding MainSearch.HasBufferedElements, Converter={StaticResource BooleanToVisibilityConverter}}" Click="resetSearchBffer_Click"/>
                        </Grid>
                    </Grid>
                    <TextBlock x:Name="dev_bind" HorizontalAlignment="Left" Margin="37,61,0,0" TextWrapping="Wrap" Text="{Binding IsActivated, ElementName=titleFilter, UpdateSourceTrigger=PropertyChanged}" Width="68" Height="25" Grid.Row="2" VerticalAlignment="Top" Foreground="#FFE8BF05" Visibility="Collapsed" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                    <TextBlock x:Name="SearchingAnim" Margin="0,20,0,0" Grid.Row="2" TextWrapping="Wrap" Text="{Binding MainSearch.Query, StringFormat=Searching for \'\{0\}\'..}" Foreground="#FFA3A6A6" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="{Binding MainSearch.IsSearching, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock x:Name="searchError" Margin="0,20,0,0" Grid.Row="2" TextWrapping="Wrap" Text="{Binding MainSearch.FailureReason}" Foreground="#FFE84646" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="{Binding MainSearch.ShouldShowError, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <ScrollViewer x:Name="SearchResultsScrollV" Margin="0,10,10,10" Template="{DynamicResource genericWinSclorrbar}" VerticalScrollBarVisibility="Auto" Grid.Row="2" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" >
                        <ItemsControl x:Name="searchResultsList" Margin="0" ItemsSource="{Binding MainSearch.BufferedResuls}" Background="#00535353" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Top" MinHeight="50">

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>


                                    <StackPanel x:Name="StackFBHDTasks" IsItemsHost="True" Orientation="Vertical" Height="Auto" Margin="0" ClipToBounds="True"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate  DataType="local:SearchElement" >
                                    <Grid Background="#00303030" d:DesignWidth="144" d:DesignHeight="34">

                                        <local:SearchItem CoreSearchElement="{Binding}">

                                        </local:SearchItem>

                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                        </ItemsControl>
                    </ScrollViewer>
                    <Border HorizontalAlignment="Left" Margin="10,61,0,50" Grid.Row="2" Width="157" BorderBrush="#FF939393" BorderThickness="1" Visibility="Collapsed">
                        <Grid Margin="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25*"/>
                                <RowDefinition Height="104*"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="textBlock1" TextWrapping="Wrap" Text="TextBlock" Foreground="#FFBDBDBD" Margin="0,0,0,10" d:LayoutOverrides="Height, LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                            <Image x:Name="image1" Margin="0,10,5,10" d:LayoutOverrides="LeftMargin, RightMargin" Grid.Row="1"/>
                        </Grid>
                    </Border>
                </Grid>
                <Grid x:Name="grd_OutputOptions" Margin="0,0,8,29" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0*"/>
                        <ColumnDefinition Width="26"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="preferencesButt" Content="Button" Template="{DynamicResource preerences}" Background="#FF040405" Foreground="#FF7DCD79" Margin="0" SnapsToDevicePixels="True" Tag="mp3" ToolTip="Task type" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Click="preferencesButt_Click"/>
                </Grid>
                <Grid x:Name="dev" HorizontalAlignment="Right" Height="30" Margin="0,0,100,26" VerticalAlignment="Bottom" Width="151" Visibility="Hidden">
                    <Button x:Name="GoButton" Content="Next" Template="{DynamicResource FlatButt}" BorderBrush="#FF333333" Foreground="#FFD5D5D5" Click="GoButton_Click" HorizontalAlignment="Right" Width="46"/>
                    <Button x:Name="read" Content="read" Template="{DynamicResource FlatButt}" HorizontalAlignment="Left" Width="41" BorderBrush="#FF333333" Foreground="#FFD5D5D5" Click="read_Click"/>
                    <Button x:Name="write" Content="write" Margin="56,0,54,0" Template="{DynamicResource FlatButt}" BorderBrush="#FF333333" Foreground="#FFD5D5D5" Click="write_Click"/>
                </Grid>
                <Grid HorizontalAlignment="Right" Margin="0,148,162,161" Width="102" Visibility="Collapsed">
                </Grid>
                <TextBox x:Name="comma" Margin="191,153,10,61" TextWrapping="Wrap" Text="TextBox" FontSize="9.333" Visibility="Collapsed"/>
                <Border x:Name="grd_logger" Height="22" VerticalAlignment="Bottom" Background="#000081CB" BorderBrush="#FF393942" BorderThickness="0,1,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="53"/>
                            <ColumnDefinition Width="244"/>
                            <ColumnDefinition Width="59"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="lbl_Verbose_satus" TextWrapping="Wrap" Foreground="White" TextOptions.TextFormattingMode="Display" Text="{Binding verboseStatus, ConverterParameter=count, ElementName=window, FallbackValue=Ready}" Margin="3,3,0,3" HorizontalAlignment="Left" Grid.Column="1" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                        <TextBlock x:Name="lbl_TasksCount" TextWrapping="Wrap" Foreground="#FFD5D5D5" TextOptions.TextFormattingMode="Display" Text="{Binding TasksCount, ConverterParameter=count, FallbackValue=Ready, Mode=OneWay, StringFormat=Tasks: \{0:D\}}" Margin="9,2,9,3" Grid.Column="4" Opacity="0.85" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                        <TextBlock x:Name="ffmpegProcesses" TextWrapping="Wrap" Foreground="#FFD5D5D5" TextOptions.TextFormattingMode="Display" Text="{Binding RunningFfmpegCount, StringFormat=FF: \{0\}}" Margin="8,3" Grid.Column="5" Opacity="0.85" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                        <local:ButtonMi x:Name="terminal" Margin="2,2,2,3" VerticalAlignment="Stretch" iconSource="media/console-16-white.png" Width="Auto" HorizontalAlignment="Stretch" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                        <local:ButtonMi x:Name="serverButt" Grid.Column="2" Margin="0,10,22,0" VerticalAlignment="Top" iconSource="media/mi-simple-xml-16-white.png" captionVisibility="Visible" textcaption="Server" HorizontalAlignment="Right" Width="0" Foreground="#FFB6B2B2" Visibility="{Binding IsServerRunning, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=VISIBLE}" Height="0" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                        <Grid Grid.Column="3" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
                            <Border Margin="0" BorderBrush="#FF2F2F37" BorderThickness="1,0" HorizontalAlignment="Left" Visibility="{Binding ExistLoadedCLWatchers, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid x:Name="CustomLW" HorizontalAlignment="Left">
                                    <ItemsControl  x:Name="CustomLWItems" Margin="4,0" ItemsSource="{Binding CustomListWatchers}" VerticalAlignment="Center" HorizontalAlignment="Left">
                                        <ItemsControl.ItemTemplate>

                                            <DataTemplate>
                                                <Grid VerticalAlignment="Center" HorizontalAlignment="Left">
                                                    <local:CLWControl Margin="4,0" Width="Auto" CoreCustomListWatcher="{Binding Mode=OneWay}" VerticalAlignment="Center" Height="Auto"/>


                                                </Grid>

                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal"  />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </Border>
                <StackPanel x:Name="TabsSwitchGrd" Height="20" Margin="218,0,100,25" VerticalAlignment="Bottom" Orientation="Horizontal">
                    <local:RadioWithIcon x:Name="TaskWiewTabSwitch" Template="{DynamicResource RadioTabSwitchMi}" HorizontalAlignment="Left" Background="#FF303030" Foreground="#FFF0EFF1" Icon="media/code-in-square-16-white-small.png" Content="Task" BorderBrush="{x:Null}" Margin="4,0" d:LayoutOverrides="LeftPosition, RightPosition" IsChecked="True"/>
                    <local:RadioWithIcon x:Name="searchViewTabSwitch" Template="{DynamicResource RadioTabSwitchMi}" HorizontalAlignment="Left" Background="#FF303030" Foreground="#FFF0EFF1" Icon="media/search-in-square-16-white2.png" Content="Search" BorderBrush="{x:Null}" d:LayoutOverrides="LeftPosition, RightPosition" Margin="4,0"/>
                </StackPanel>
                <Button x:Name="button" Content="test xml" HorizontalAlignment="Right" Height="28" Margin="0,53,10,0" VerticalAlignment="Top" Width="52" Click="button_Click_2" Style="{DynamicResource SimpleButton}" BorderBrush="White" Background="White" Visibility="Hidden"/>

            </Grid>
        </Border>
        <Border x:Name="logs" Height="150" Margin="10,0,0,27" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="241" BorderBrush="#FFD1D1D1" BorderThickness="1" Visibility="Collapsed">
            <i:Interaction.Behaviors>
                <ei:MouseDragElementBehavior ConstrainToParentBounds="True" Y="20"/>
            </i:Interaction.Behaviors>
            <StackPanel x:Name="Console_grd" Background="#B2000000">
                <TextBlock x:Name="log" Margin="4,4,22,0" TextWrapping="Wrap" Text="FFmpeg started with mkv settings" Foreground="#FF26D4CB" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <TextBlock x:Name="log_Copy" Margin="4,4,0,0" TextWrapping="Wrap" Text="FFmpeg started with mkv settings" Foreground="#FF26D4CB" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <TextBlock x:Name="log_Copy1" Margin="4,4,0,0" TextWrapping="Wrap" Text="FFmpeg started with mkv settings" Foreground="#FF26D4CB" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <TextBlock x:Name="log_Copy2" Margin="4,4,0,0" TextWrapping="Wrap" Text="FFmpeg started with mkv settings" Foreground="#FF26D4CB" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <TextBlock x:Name="log_Copy3" Margin="4,4,0,0" TextWrapping="Wrap" Text="FFmpeg started with mkv settings" Foreground="#FF26D4CB" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            </StackPanel>

        </Border>
        <Grid x:Name="regextests" Margin="123,180,22,27" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=menuItem}">
            <TextBlock x:Name="devresult" Height="49" TextWrapping="Wrap" Text="result" VerticalAlignment="Bottom" Background="#FF323232" Foreground="#FFECECEC"/>
            <TextBox x:Name="devregex" Height="67" TextWrapping="Wrap" Text="regex" VerticalAlignment="Top" Background="#FF383838" Foreground="White" TextChanged="devregex_TextChanged"/>
            <TextBox x:Name="devregex_iinput" TextWrapping="Wrap" Text="input" Background="#FF383838" Foreground="White" Margin="0,82,0,97"/>

        </Grid>

    </Grid>
</Window>
