<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:fbhd"
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Name="userControl" x:Class="fbhd.TaskComponent"
             mc:Ignorable="d" 
             d:DesignHeight="23" d:DesignWidth="167" UseLayoutRounding="True" SnapsToDevicePixels="True" TextOptions.TextFormattingMode="Display"  Margin="0" MouseEnter="userControl_MouseEnter" MouseLeave="userControl_MouseLeave" Background="#00000000" PreviewMouseLeftButtonDown="userControl_PreviewMouseLeftButtonDown" MouseLeftButtonDown="userControl_MouseLeftButtonDown">
    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:selectedToBackgroundColorConverter x:Key="selectedToBackColor"/>

        <local:URLtoVideoID x:Key="URLtoVideoID"/>

        <local:TaskStatusToUIvisibility x:Key="TaskStatusToUIvisibility"/>

        <ControlTemplate x:Key="121" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="image" Source="media/mp3-cool-yellow.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="None" ClipToBounds="True" ToolTip="mp3 task" Opacity="0.75"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="buttonoptionsdrop" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Background="#00040405">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                </ColorAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Image x:Name="image" HorizontalAlignment="Center" Source="media/arow-down-white-mi-7x7.png" VerticalAlignment="Center" Width="7" Margin="0" Height="7" Opacity="0.75"/>
            </Grid>
        </ControlTemplate>
        <LinearGradientBrush x:Key="MenuBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F6F6F6" Offset="0.25"/>
            <GradientStop Color="#EAE8E8" Offset="0.25"/>
            <GradientStop Color="#DCD9D9" Offset="0.8"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="MenuStyle1" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuStyle2" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource MenuBackground}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="0" RadiusX="0" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="icon" HorizontalAlignment="Stretch" Margin="0,0,0,1" Width="14" Height="14" Source="media/elet-14-grey-filled-mi.png"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}"/>
                <Trigger Property="IsChecked" Value="True"/>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Fill" TargetName="Bg">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#34C5EBFF" Offset="0"/>
                                <GradientStop Color="#3481D8FF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="starmenuitem" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="0" RadiusX="0" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="icon" HorizontalAlignment="Stretch" Margin="5,3,5,4" Width="14" Height="14" Source="media/star-14-grey-filled-mi.png"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}"/>
                <Trigger Property="IsChecked" Value="True"/>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Fill" TargetName="Bg">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#34C5EBFF" Offset="0"/>
                                <GradientStop Color="#3481D8FF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MenuItemControlTemplat_skip" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="0" RadiusX="0" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="icon" HorizontalAlignment="Stretch" Margin="0,0,0,1" Width="14" Height="14" Source="media/enter-grey14-14.png"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}"/>
                <Trigger Property="IsChecked" Value="True"/>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Fill" TargetName="Bg">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#34C5EBFF" Offset="0"/>
                                <GradientStop Color="#3481D8FF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="ouoiuoiuio" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="contentPresenter">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="564,1,1,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="contentPresenter">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="506,1,1,1"/>
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Themes:ButtonChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid>

                            <!-- This Border is the track. It must be named PART_Track -->
                            <Border x:Name="PART_Track" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2"/>

                            <!-- This Border shows progress. It must be named PART_Indicator for the control to function -->
                            <Border HorizontalAlignment="Left" x:Name="PART_Indicator" Background="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="2"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="smallProgBarFlat" TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid>

                            <!-- This Border is the track. It must be named PART_Track -->
                            <Border x:Name="PART_Track" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="0"/>

                            <!-- This Border shows progress. It must be named PART_Indicator for the control to function -->
                            <Border HorizontalAlignment="Left" x:Name="PART_Indicator" Background="{TemplateBinding Foreground}" BorderThickness="1" CornerRadius="0"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="MenuItemControlTemplatecopycmd" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="True">
                <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="0" RadiusX="0" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="icon" HorizontalAlignment="Stretch" Margin="0,0,0,1" Width="14" Height="14" Source="media/copy-16-white-commandline.png"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}"/>
                <Trigger Property="IsChecked" Value="True"/>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Fill" TargetName="Bg">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#34C5EBFF" Offset="0"/>
                                <GradientStop Color="#3481D8FF" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <Border x:Name="grd_main" Padding="0,1" BorderThickness="1" Background="Transparent" >
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="Status">
                <VisualState x:Name="Resolved">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="lblUrl">
                            <EasingColorKeyFrame KeyTime="0" Value="#FFF3F3F3"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="NotResolved">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="lblUrl">
                            <EasingColorKeyFrame KeyTime="0" Value="#FF656565"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="HoverStatus">
                <VisualState x:Name="Hover"/>
                <VisualState x:Name="normal"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid Background="#00000000">

            <Grid Margin="0" ClipToBounds="True" Background="#00000000">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="14"/>
                </Grid.ColumnDefinitions>
                <Grid Margin="0,0,5,0"  Background="#00000000">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="38*"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="grd_statusIcon" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" ClipToBounds="True">
                        <Image x:Name="done_i" Margin="0" Source="media/chec3.png" Height="10" VerticalAlignment="Center" d:LayoutOverrides="TopMargin, BottomMargin" Visibility="{Binding taskStatus, ConverterParameter=done, Converter={StaticResource TaskStatusToUIvisibility}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TaskComponent}}}" d:IsHidden="True"/>
                        <Image x:Name="error_ico" Margin="0" Source="media/error1.png" Height="10" VerticalAlignment="Center" d:LayoutOverrides="TopMargin, BottomMargin" Visibility="{Binding taskStatus, ConverterParameter=failed, Converter={StaticResource TaskStatusToUIvisibility}, ElementName=userControl}" d:IsHidden="True"/>
                        <Image x:Name="resolving_ico" Margin="0" Source="media/resloving-gray-10-10.png" Height="10" VerticalAlignment="Center" d:LayoutOverrides="TopMargin, BottomMargin" RenderTransformOrigin="0.5,0.5"  Visibility="{Binding taskStatus, ConverterParameter=resolving, Converter={StaticResource TaskStatusToUIvisibility}, ElementName=userControl}" d:IsHidden="True"/>
                        <Grid x:Name="grd_downloading_anim" Margin="0" Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" ClipToBounds="True" Visibility="{Binding taskStatus, ConverterParameter=downloading, Converter={StaticResource TaskStatusToUIvisibility}, ElementName=userControl}">
                            <Image x:Name="downloading_ico" Margin="0,0,-60,0" Source="media/down-small-11-turns-white.png" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Visibility="Visible" Height="10" Width="110" HorizontalAlignment="Left" Stretch="None"/>
                        </Grid>
                    </Grid>
                    <Border x:Name="url_border" Margin="0" BorderThickness="1" CornerRadius="2" BorderBrush="#FF2F2F37"   Grid.ColumnSpan="2" Grid.Column="{Binding taskStatus, ConverterParameter=url_column, Converter={StaticResource TaskStatusToUIvisibility}, ElementName=userControl}" >
                        <TextBlock x:Name="lblUrl" d:Text="yizeuyiu iueziuyzeiufg zioh ohzoeih oiiuzegiuhgzueigfiugzeuifhpizgefpu"  TextWrapping="WrapWithOverflow" Text="{Binding url, Converter={StaticResource URLtoVideoID}, ElementName=userControl, FallbackValue=https://www.facebook.com/DUMMYking.net/videos/575243946572618/?sfnsn\=mo, Mode=OneWay}" Margin="1,0" Foreground="#FFA4A4A4" ClipToBounds="True" Drop="lblUrl_Drop"/>
                    </Border>
                </Grid>
                <Grid x:Name="typeSwitch" Grid.Column="1" Margin="0,4,3.965,3" Visibility="Collapsed">
                    <local:ButtonMi x:Name="mp3Butt" d:LayoutOverrides="Height" iconSource="media/mp3-cool-yellow.png" Tag="mp3"/>
                    <local:ButtonMi x:Name="mp4Butt" iconSource="media/mp4-cool-magenta-ofiice.png" d:LayoutOverrides="Height" Tag="mp4"  Visibility="Collapsed" />
                    <local:ButtonMi x:Name="mkvButt" iconSource="media/mkvcool-white-office.png" Tag="mkv"  Visibility="Collapsed" Margin="0,0,-26.525,0" />
                    <local:ButtonMi x:Name="jpgButt" iconSource="media/jpg-cool-office.png" Tag="jpg"  Visibility="Collapsed" Margin="0,0,-26.525,0"/>
                </Grid>
                <Grid x:Name="menu1" Grid.Column="2" Margin="0" Width="13" HorizontalAlignment="Center" VerticalAlignment="Center" Height="12">
                    <Button x:Name="buttonoptionsdrop" Content="Button" Template="{DynamicResource buttonoptionsdrop}" Background="#FF040405" Foreground="#FF7DCD79" SnapsToDevicePixels="True" VerticalAlignment="Center" Height="16" Click="buttonoptionsdrop_Click" ToolTip="Options"/>
                    <Popup x:Name="popup" Margin="0" VerticalAlignment="Bottom" HorizontalAlignment="Right" StaysOpen="False" Closed="popup_Closed" Opened="popup_Opened">
                        <StackPanel Background="Black" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" >
                            <MenuItem Header="Remove" Foreground="#FFAAAAAA" TextOptions.TextFormattingMode="Display" d:LayoutOverrides="Width, LeftPosition, RightPosition, TopPosition, BottomPosition" Margin="0,0,2,0" Template="{DynamicResource MenuItemControlTemplate1}" Click="MenuItem_Click_1"/>
                            <MenuItem Header="Properties" Foreground="#FFAAAAAA" TextOptions.TextFormattingMode="Display" Margin="0,0,2,0" Template="{DynamicResource starmenuitem}" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" InputGestureText="R"/>
                            <MenuItem Header="Skip" Foreground="#FFAAAAAA" TextOptions.TextFormattingMode="Display" Margin="0,0,2,0" Template="{DynamicResource MenuItemControlTemplat_skip}" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" Click="MenuItem_Click"/>
                            <MenuItem Header="Copy" Foreground="#FFAAAAAA" TextOptions.TextFormattingMode="Display" Margin="0,0,2,0" Template="{DynamicResource MenuItemControlTemplatecopycmd}" Click="MenuItem_Click" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" InputGestureText="C" UsesItemContainerTemplate="True">
                                <MenuItem Header="ffmpeg args" Foreground="#FFAAAAAA" TextOptions.TextFormattingMode="Display" Margin="0,0,2,0" Template="{DynamicResource MenuItemControlTemplat_skip}" Click="MenuItem_Click"/>
                                <MenuItem Header="post url" Foreground="#FFAAAAAA" TextOptions.TextFormattingMode="Display" Margin="0,0,2,0" Template="{DynamicResource MenuItemControlTemplat_skip}" Click="MenuItem_Click"/>
                                <MenuItem Header="thumb url" Foreground="#FFAAAAAA" TextOptions.TextFormattingMode="Display" Margin="0,0,2,0" Template="{DynamicResource MenuItemControlTemplat_skip}" Click="MenuItem_Click"/>
                                <MenuItem Header="video url" Foreground="#FFAAAAAA" TextOptions.TextFormattingMode="Display" Margin="0,0,2,0" Template="{DynamicResource MenuItemControlTemplat_skip}" Click="MenuItem_Click"/>
                                <MenuItem Header="audio url" Foreground="#FFAAAAAA" TextOptions.TextFormattingMode="Display" Margin="0,0,2,0" Template="{DynamicResource MenuItemControlTemplat_skip}" Click="MenuItem_Click"/>
                                <MenuItem Header="MenuItem" Height="100" Width="100" StaysOpenOnClick="True"/>
                            </MenuItem>
                        </StackPanel>
                    </Popup>
                </Grid>
                <Grid x:Name="MediaTypeSwitchGrd" Grid.Column="1" Margin="0,4,3.965,3" Visibility="Collapsed">
                    <local:ButtonMi x:Name="mp3Butt1" d:LayoutOverrides="Height" iconSource="media/mp3-cool-yellow.png" Tag="mp3"/>
                    <local:ButtonMi x:Name="mp4Butt1" iconSource="media/mp4-cool-magenta-ofiice.png" d:LayoutOverrides="Height" Tag="mp4"  Visibility="Collapsed" />
                    <local:ButtonMi x:Name="mkvButt1" iconSource="media/mkvcool-white-office.png" Tag="mkv"  Visibility="Collapsed" Margin="0,0,-26.525,0"  />
                    <local:ButtonMi x:Name="jpgButt1" iconSource="media/jpg-cool-office.png" Tag="jpg"  Visibility="Collapsed" Margin="0,0,-26.525,0"  />
                </Grid>
                <local:MediaTypeSwitchControl x:Name="MediaTypeSwitch" Shifted="MediaTypeSwitch_Shifted" Grid.Column="1" Margin="2,0" IconAudio="media/wav-16-white.png" IconVideo="media/video-16-medium.png" IconImage="media/image-16-small.png" Value="{Binding MediaType, FallbackValue=0}">


                    <local:MediaTypeSwitchControl.Template>
                        <ControlTemplate>
                            <Grid>
                                <local:ButtonWithIcon x:Name="PART_BUTTON" Icon="media/wav-16-white.png">
                                    <local:ButtonWithIcon.Template>
                                        <ControlTemplate TargetType="local:ButtonWithIcon">
                                            <Grid x:Name="grd" Background="#00000000" Opacity="0.85">
                                                <Image Source="{TemplateBinding Icon}" Height="16" Width="16" HorizontalAlignment="Center" VerticalAlignment="Center"></Image>

                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Opacity" Value="1" TargetName="grd"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </local:ButtonWithIcon.Template>
                                </local:ButtonWithIcon>


                            </Grid>
                        </ControlTemplate>
                    </local:MediaTypeSwitchControl.Template>

                </local:MediaTypeSwitchControl>
            </Grid>
            <ProgressBar x:Name="progressBar_download" Height="4" Margin="0" Style="{DynamicResource smallProgBarFlat}" VerticalAlignment="Bottom" Background="#003E3D3D" BorderBrush="#0004B081" Foreground="#FF9C9C9C" Maximum="1" BorderThickness="0" Visibility="{Binding IsDownloading, Converter={StaticResource BooleanToVisibilityConverter}}" Value="{Binding downloadingPercent, FallbackValue=0, Mode=OneWay}"/>

        </Grid>
    </Border>
</UserControl>
