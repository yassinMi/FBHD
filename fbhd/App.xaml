<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:fbhd"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="fbhd.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Simple Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>



           

            <ControlTemplate x:Key="RadioResoPicker" TargetType="{x:Type RadioButton}">
                <Grid x:Name="grid">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask)" Storyboard.TargetName="textBlock">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <SolidColorBrush Color="#FF403D3D"/>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                        <EasingColorKeyFrame KeyTime="0" Value="#00040404"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.OpacityMask)" Storyboard.TargetName="textBlock">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <SolidColorBrush Color="#FF403D3D"/>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed"/>
                            <VisualState x:Name="Disabled"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked"/>
                            <VisualState x:Name="Unchecked"/>
                            <VisualState x:Name="Indeterminate"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <VisualStateManager.CustomVisualStateManager>
                        <ei:ExtendedVisualStateManager/>
                    </VisualStateManager.CustomVisualStateManager>
                    <Rectangle x:Name="rectangle" Fill="{x:Null}" Margin="0" RadiusX="0" SnapsToDevicePixels="True" Stroke="{Binding Foreground, ElementName=textBlock}"/>
                    <TextBlock x:Name="textBlock" Margin="10,2" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextOptions.TextFormattingMode="Display" FontSize="12" Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <Grid x:Name="grid1" HorizontalAlignment="Stretch" Margin="0" Width="Auto" Background="#3F040404"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="FlatButt" TargetType="{x:Type Button}">
                <Grid>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FF242F34"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FF334E5A"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FF3E3E40">
                                            <EasingColorKeyFrame.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </EasingColorKeyFrame.EasingFunction>
                                        </EasingColorKeyFrame>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="grid">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FF242F34"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FF334E5A"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FF26373E"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Border x:Name="border" BorderThickness="1" Background="#FF303030" BorderBrush="#00000000">
                        <Grid x:Name="grid" Background="#00303030">
                            <Rectangle Fill="{x:Null}" Height="Auto" Margin="0" Stroke="Red" VerticalAlignment="Stretch" Visibility="Hidden"/>
                            <TextBlock x:Name="textBlock" Height="Auto" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" Foreground="#FFD1D1D1" TextOptions.TextFormattingMode="Display" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="buttmp4official" TargetType="{x:Type Button}">
                <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                        <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                        <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed"/>
                            <VisualState x:Name="Disabled"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Image x:Name="image" Source="media/mp4-cool-magenta-ofiice.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="None" ClipToBounds="True" ToolTip="mp3 task"/>
                    <Grid x:Name="grid1" Margin="0" Background="#4C000000"/>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="mi2049switch" TargetType="{x:Type ToggleButton}">
                <Grid Background="#00000000">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Stretch" Width="Auto" VerticalAlignment="Center"/>
                    <Grid x:Name="sw" HorizontalAlignment="Stretch" Margin="2,0,0,0" Width="Auto" Grid.Column="1" VerticalAlignment="Center" Opacity="0.8">
                        <Rectangle x:Name="rec" Fill="{x:Null}" Margin="0" Stroke="{TemplateBinding Foreground}" RadiusX="7" HorizontalAlignment="Stretch" Width="Auto" RadiusY="7" StrokeThickness="1.5" Height="16"/>

                        <ed:Arc x:Name="circ" ArcThickness="8" ArcThicknessUnit="Pixel" EndAngle="360" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="4,0,0,0" Stretch="None" Stroke="{x:Null}" StartAngle="0" Width="8" VerticalAlignment="Center" Height="8"/>
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>

                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Opacity" TargetName="sw" Value="1"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true" >

                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard >
                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="circ"   Duration="4" >
                                        <SplineThicknessKeyFrame KeyTime="0:0:00.1" Value="16,0,0,0" KeySpline="0.58,0,0.38,1"/>

                                    </ThicknessAnimationUsingKeyFrames>

                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="circ" Storyboard.TargetProperty="Fill.Color">
                                        <SplineColorKeyFrame KeyTime="0:0:00.1" Value="LightSeaGreen"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard >
                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="circ"   Duration="4" >
                                        <SplineThicknessKeyFrame KeyTime="0:0:00.1" Value="4,0,0,0" KeySpline="0.62,0,0.31,1"/>

                                    </ThicknessAnimationUsingKeyFrames>

                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="circ" Storyboard.TargetProperty="Fill.Color">
                                        <SplineColorKeyFrame KeyTime="0:0:00.1" Value="#FFB8B8B8" KeySpline="0.68,0.27,0.36,0.82"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>

                    </Trigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>
            <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
            <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
            <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />
            <ControlTemplate x:Key="ToggleButtonControlTemplateflattt" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" x:Name="Border"
            			BorderBrush="#FF2F2F37" 
            			CornerRadius="0" BorderThickness="1, 1, 1, 1" 
            			Background="Black" />
                    <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#FF2F2F37" x:Name="ButtonBorder"
            			CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
            			Background="#FF040404" />

                    <Path x:Name="Arrow" Grid.Column="1" 
            			Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            			HorizontalAlignment="Center" Fill="#FF929292"
            			VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" TargetName="Border" Value="#FF43434F"/>
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#FF3A3A3A"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="#FF3A3A3A"/>
                        <Setter Property="Fill" TargetName="Arrow" Value="#FFB5C1C9"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                        <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        <Setter Property="Fill" TargetName="Arrow" Value="#999"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="mi_flat_combo"  TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="TextElement.Foreground" Value="#FFB6B6B6"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton" Grid.Column="2"
            						ClickMode="Press" Focusable="False"
            						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
            						Template="{DynamicResource ToggleButtonControlTemplateflattt}" Background="Black"/>

                                <ContentPresenter x:Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
            						HorizontalAlignment="Left" VerticalAlignment="Center"                              
            						Content="{TemplateBinding SelectionBoxItem}" 
            						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            						ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                <TextBox x:Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
            						IsReadOnly="{TemplateBinding IsReadOnly}"
            						Visibility="Visible" Background="Transparent"
            						HorizontalAlignment="Left" VerticalAlignment="Center"
            						Focusable="True" >
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBox}" >
                                            <Border x:Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <!-- Popup showing items -->
                                <Popup x:Name="Popup" Placement="Bottom"
            						Focusable="False" AllowsTransparency="True"
            						IsOpen="{TemplateBinding IsDropDownOpen}"
            						PopupAnimation="Slide">
                                    <Grid x:Name="DropDown" SnapsToDevicePixels="True"
            							MinWidth="{TemplateBinding ActualWidth}"
            							MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" Background="#FF212121" Margin="0, 1, 0, 0"
            								CornerRadius="0" BorderThickness="1,1,1,1" 
            								BorderBrush="#FF4F4F4F"/>
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </Trigger>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="butto-dialog-x" TargetType="{x:Type Button}">
                <Grid x:Name="grid" Width="16" Height="16" Background="#00040405">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                        <EasingColorKeyFrame KeyTime="0" Value="#00333333"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid1">
                                        <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed"/>
                            <VisualState x:Name="Disabled"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Image x:Name="image" Source="media/x-white.png" ScrollViewer.VerticalScrollBarVisibility="Hidden" Stretch="None" ClipToBounds="True" ToolTip="mp3 task"/>
                    <Grid x:Name="grid1" Margin="0" Background="#4C000000"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                    <Grid>
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                        <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                            <Condition Property="WindowState" Value="Normal"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="WindowFlat4" TargetType="{x:Type Window}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Border BorderBrush="#FF9C9C9C" BorderThickness="1">
                                <Grid Background="{TemplateBinding Background}">
                                    <AdornerDecorator>
                                        <ContentPresenter/>
                                    </AdornerDecorator>
                                    <Grid x:Name="grd_window_head" Height="20" VerticalAlignment="Top" Margin="0,0,-0.535,0">
                                        <Button x:Name="x" Content="Button"  Click="x_Click_1" Template="{DynamicResource butto-dialog-x}" Background="#FF040405" Foreground="#FF7DCD79" Margin="0,0,2,0" SnapsToDevicePixels="True" Tag="mp3" ToolTip="Task type" VerticalAlignment="Center" HorizontalAlignment="Right" RenderTransformOrigin="0.828,0.469"/>
                                        <TextBlock x:Name="textBlock_Copy" HorizontalAlignment="Left" Margin="5,2,0,0" TextWrapping="Wrap" VerticalAlignment="Center" Foreground="#FFB2AFAF" TextOptions.TextFormattingMode="Display" Text="{TemplateBinding Title}"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                        <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <ControlTemplate x:Key="menuItemfl" TargetType="{x:Type MenuItem}">
                <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                    <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                    <Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2" Stroke="Transparent" StrokeThickness="1"/>
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="4"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="37"/>
                            <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                            <ColumnDefinition Width="17"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <Border x:Name="GlyphPanel" BorderBrush="#FFCDD3E6" BorderThickness="1" Background="Black" CornerRadius="3" Height="22" Margin="1" Visibility="Hidden" Width="22">
                            <Path x:Name="Glyph" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="#FF0C12A1" FlowDirection="LeftToRight" Height="11" Width="9"/>
                        </Border>
                        <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}" Visibility="Collapsed"/>
                        <Path Grid.Column="5" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" Margin="4,0,0,0" VerticalAlignment="Center"/>
                    </Grid>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                        <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                            <Border x:Name="SubMenuBorder" BorderBrush="#FF646464" BorderThickness="1" Background="Black">
                                <ScrollViewer x:Name="SubMenuScrollViewer" Margin="1,0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="#FF111111" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                        </Canvas>
                                        <Rectangle Fill="#FF111111" HorizontalAlignment="Left" Margin="1,2" RadiusY="2" RadiusX="2" Width="28"/>
                                        <Rectangle Fill="Black" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                        <Rectangle Fill="Black" HorizontalAlignment="Left" Margin="30,2,0,2" Width="1"/>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Themes:SystemDropShadowChrome>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                        <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="#D1DBF4FF"/>
                    </Trigger>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                        <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                        <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Fill" TargetName="Bg">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#34C5EBFF" Offset="0"/>
                                    <GradientStop Color="#3481D8FF" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Stroke" TargetName="Bg" Value="#8571CBF1"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="#FF9A9A9A"/>
                        <Setter Property="Background" TargetName="GlyphPanel" Value="#FFEEE9E9"/>
                        <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#FFDBD6D6"/>
                        <Setter Property="Fill" TargetName="Glyph" Value="#FF848589"/>
                    </Trigger>
                    <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                        <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                        <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="MenuItemControlparfl" TargetType="{x:Type MenuItem}">
                <Grid SnapsToDevicePixels="True">
                    <Rectangle x:Name="OuterBorder" RadiusY="2" RadiusX="2"/>
                    <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Margin="1" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
                    <Rectangle x:Name="InnerBorder" Margin="2"/>
                    <DockPanel>
                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <Path x:Name="GlyphPanel" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
                        <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </DockPanel>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
                        <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                            <Border x:Name="SubMenuBorder" BorderBrush="#FF575757" BorderThickness="1" Background="Black">
                                <ScrollViewer x:Name="SubMenuScrollViewer" Margin="1,0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="OpaqueRect" Fill="Black" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                        </Canvas>
                                        <Rectangle Fill="Black" HorizontalAlignment="Left" Margin="1,2" RadiusY="2" RadiusX="2" Width="28"/>
                                        <Rectangle Fill="#FF1D1D1D" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                        <Rectangle Fill="Black" HorizontalAlignment="Left" Margin="30,2,0,2" Width="1"/>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Themes:SystemDropShadowChrome>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                        <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                    </Trigger>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                        <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                        <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
                        <Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF"/>
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                        <Setter Property="Fill" TargetName="Bg">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#28717070" Offset="0"/>
                                    <GradientStop Color="#50717070" Offset="0.75"/>
                                    <GradientStop Color="#90717070" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                    </Trigger>
                    <Trigger Property="IsSubmenuOpen" Value="True">
                        <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                        <Setter Property="Fill" TargetName="Bg">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#28717070" Offset="0"/>
                                    <GradientStop Color="#50717070" Offset="0.75"/>
                                    <GradientStop Color="#90717070" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="#FF9A9A9A"/>
                        <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF848589"/>
                    </Trigger>
                    <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                        <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                        <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="ToggleButtonmi2050" TargetType="{x:Type ToggleButton}">
                <Grid Background="#00000000" VerticalAlignment="Center" Height="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Stretch" Width="Auto" VerticalAlignment="Center" Foreground="#FFD5D5D5"/>
                    <Grid x:Name="sw" HorizontalAlignment="Stretch" Margin="2,0,0,0" Width="20" Grid.Column="1" VerticalAlignment="Center" Opacity="1" Height="14">
                        <Grid.Effect>
                            <DropShadowEffect Color="White" BlurRadius="5" ShadowDepth="2" Opacity="0.2"/>
                        </Grid.Effect>
                        <Rectangle x:Name="rec" Fill="{TemplateBinding Foreground}" Margin="0" RadiusX="3" HorizontalAlignment="Stretch" Width="20" RadiusY="3" StrokeThickness="0" Height="6" Opacity="0.85" Stretch="Fill"/>

                        <ed:Arc x:Name="circ" ArcThickness="8" ArcThicknessUnit="Pixel" EndAngle="360" HorizontalAlignment="Left" Margin="0" Stretch="None" Stroke="{x:Null}" StartAngle="0" Width="10" VerticalAlignment="Center" Height="10" Fill="#FFAAAAAA" StrokeThickness="0"/>
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>

                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Opacity" TargetName="rec" Value="1"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="false" >
                        <Setter Property="Fill" TargetName="rec" Value="#FF40404B"/>
                        <Setter Property="Foreground" TargetName="textBlock" Value="#FFD5D5D5"/>
                        <Setter Property="Fill" TargetName="circ" Value="#FFB6B6B6"/>


                    </Trigger>
                    <Trigger Property="IsChecked" Value="true" >
                        <Setter Property="Fill" TargetName="rec" Value="#FFAE5E0D"/>
                        
                        <!--<Setter Property="Foreground" TargetName="textBlock" Value="#FFFF8811"/>-->
                        <Setter Property="Fill" TargetName="circ" Value="#FFFF8A15"/>

                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="circ"   Duration="4" >
                                        <SplineThicknessKeyFrame KeyTime="0:0:00.1" Value="10,0,0,0" KeySpline="0.58,0,0.38,1"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>

                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard >
                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="circ"   Duration="4" >
                                        <SplineThicknessKeyFrame KeyTime="0:0:00.1" Value="2,0,0,0" KeySpline="0.62,0,0.31,1"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>



            <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
                <GradientStop Color="#E1E1E1" Offset="0"/>
                <GradientStop Color="#EDEDED" Offset="0.20"/>
                <GradientStop Color="#EDEDED" Offset="0.80"/>
                <GradientStop Color="#E3E3E3" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Grid Background="#00000000">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="regularPolygon">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF3399FF"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="regularPolygon">
                                                    <EasingColorKeyFrame KeyTime="0" Value="#FF007ACC"/>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ed:RegularPolygon x:Name="regularPolygon" Fill="#FF646464" HorizontalAlignment="Stretch" Height="Auto" InnerRadius="1" Margin="3,5" PointCount="3" Stretch="Fill" VerticalAlignment="Stretch" Width="Auto"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#E1E1E1" Offset="0"/>
                <GradientStop Color="#EDEDED" Offset="0.20"/>
                <GradientStop Color="#EDEDED" Offset="0.80"/>
                <GradientStop Color="#E3E3E3" Offset="1"/>
            </LinearGradientBrush>
            <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ThumbControlTemplate1" TargetType="{x:Type Thumb}">
                <Grid Background="#00666666">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FF666666"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                        <EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid x:Name="grid" Margin="4,0" VerticalAlignment="Stretch" Background="#FF333333"/>
                </Grid>
            </ControlTemplate>



            <Style x:Key="genericBarVertical" TargetType="{x:Type ScrollBar}">
                <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                    <RowDefinition Height="0.00001*"/>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                </Grid.RowDefinitions>
                                <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
                                <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource SimpleThumbStyle}" Themes:ScrollChrome.ScrollGlyph="VerticalGripper" Template="{DynamicResource ThumbControlTemplate1}" Background="#00F0F0F0"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="DownArrow" RenderTransformOrigin="0.5,0.5">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                            <SkewTransform AngleY="0" AngleX="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            <ColumnDefinition Width="0.00001*"/>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        </Grid.ColumnDefinitions>
                                        <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
                                        <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <ControlTemplate x:Key="genericWinSclorrbar" TargetType="{x:Type ScrollViewer}">
                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                    <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Background="#FF040405" Style="{DynamicResource genericBarVertical}"/>
                    <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource ScrollBarStyle2}"/>
                </Grid>
            </ControlTemplate>










            <Style x:Key="SimplerStyleMi" TargetType="{x:Type Button}" BasedOn="{x:Null}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
                <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">

                            <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                            <Grid x:Name="Grid" Opacity="0.85">
                                <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>

                                <!-- Content Presenter is where the text content etc is placed by the control -->
                                <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Grid>

                            <!--Each state sets a brush on the Border in the template -->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="#FF383838"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="#FF646464"/>

                                    <Setter Property="Opacity" TargetName="Grid" Value="1" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="#FF2C2C2C"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.3" TargetName="Grid"/>
                                    <Setter Property="Foreground" Value="#FF434345"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DrawingBrush x:Key="MiBrush" Viewbox="0,0,8,8" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute" TileMode="Tile" Stretch="Uniform">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing  Brush="#FF3E3E40" Geometry="M0,0L0,2 2,2 2,0z"/>

                        <GeometryDrawing Brush="#FF3E3E40" Geometry="M4,4L4,6 6,6 6,4z"/>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
                <DrawingBrush.RelativeTransform>
                    <TransformGroup>
                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                        <RotateTransform CenterY="0.5" CenterX="0.5"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </DrawingBrush.RelativeTransform>
            </DrawingBrush>









            <LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFFFFF" Offset="0"/>
                <GradientStop Color="#FFFBFF" Offset="0.5"/>
                <GradientStop Color="#F7F7F7" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
                <GradientStop Color="#ECECEC" Offset="0"/>
                <GradientStop Color="#DDDDDD" Offset="0.5"/>
                <GradientStop Color="#A0A0A0" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ToolBarButtonHover" Color="#C2E0FF"/>
            <SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6"/>
            <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="0,0,3,3" Background="{TemplateBinding Background}">
                                <Canvas Width="7" VerticalAlignment="Bottom" SnapsToDevicePixels="true" Margin="2,7,2,2" Height="6" HorizontalAlignment="Right">
                                    <Path Data="M 1.5 1 L 1.5 6" Stroke="White"/>
                                    <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
                                    <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White"/>
                                    <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
                                </Canvas>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
                <GradientStop Color="#FFFFFF" Offset="0"/>
                <GradientStop Color="#FFFBFF" Offset="0.5"/>
                <GradientStop Color="#F7F7F7" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#ECECEC" Offset="0"/>
                <GradientStop Color="#DDDDDD" Offset="0.5"/>
                <GradientStop Color="#A0A0A0" Offset="1"/>
            </LinearGradientBrush>
            <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="0,3,3,0" Background="{TemplateBinding Background}" Width="16">
                                <Canvas Width="6" VerticalAlignment="Bottom" SnapsToDevicePixels="true" Margin="7,2,2,2" Height="7" HorizontalAlignment="Right">
                                    <Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}"/>
                                    <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}"/>
                                </Canvas>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="#FF404040"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="#C2E0FF"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#FF686868"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#808080"/>
            <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FDFDFD"/>
            <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}" Background="Transparent">
                                <Rectangle>
                                    <Rectangle.Fill>
                                        <DrawingBrush ViewboxUnits="Absolute" ViewportUnits="Absolute" Viewport="0,0,4,4" Viewbox="0,0,4,4" TileMode="Tile">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                    <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="SizeAll"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="Margin" Value="0,0,11,0"/>
                <Setter Property="CornerRadius" Value="3,3,3,3"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="CornerRadius" Value="0,0,0,0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="MiToolBar" TargetType="{x:Type ToolBar}">
                <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
                                <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                                    <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" Foreground="#FF929292" Background="#FF1C1C1C" BorderBrush="{x:Null}"/>
                                    <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false">
                                        <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                            <Border x:Name="ToolBarSubMenuBorder" BorderBrush="#FF333333" BorderThickness="1" Background="Black" RenderOptions.ClearTypeHint="Enabled">
                                                <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
                                            </Border>
                                        </Themes:SystemDropShadowChrome>
                                    </Popup>
                                </Grid>
                                <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
                                    <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                        <Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Style="{DynamicResource ToolBarThumbStyle_Mi}" Width="10" Background="#FFDC1717"/>
                                        <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                        <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </DockPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsOverflowOpen" Value="true">
                                    <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                                </Trigger>
                                <Trigger Property="Header" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="ToolBarTray.IsLocked" Value="true">
                                    <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                    <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
                                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                                    <Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                                    <Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
                                    <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                                    <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
                                    <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
                                    <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                                    <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                                    <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                                    <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                                    <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                                    <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                                    <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                                    <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                                    <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ToolBarThumbStyle_Mi" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}" Background="Transparent" Margin="3,1,-2,0">
                                <Rectangle Margin="-4,0,0,0" Stroke="{x:Null}" HorizontalAlignment="Left" Width="5" Fill="{DynamicResource MiBrush}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="SizeAll"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="MiServerStyleToggle" TargetType="{x:Type ToggleButton}">
                <Grid Background="#00000000" VerticalAlignment="Center" Height="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="{TemplateBinding Content}" HorizontalAlignment="Stretch" Width="Auto" VerticalAlignment="Center" Foreground="#FFD5D5D5"/>
                    <Grid x:Name="sw" HorizontalAlignment="Stretch" Margin="2,0,0,0" Width="20" Grid.Column="1" VerticalAlignment="Center" Opacity="1" Height="14">
                        <Grid.Effect>
                            <DropShadowEffect Color="White" BlurRadius="5" ShadowDepth="2" Opacity="0.2"/>
                        </Grid.Effect>
                        <Rectangle x:Name="rec" Fill="{TemplateBinding Foreground}" Margin="0" RadiusX="3" HorizontalAlignment="Stretch" Width="20" RadiusY="3" StrokeThickness="0" Height="6" Opacity="0.85" Stretch="Fill"/>

                        <ed:Arc x:Name="circ" ArcThickness="8" ArcThicknessUnit="Pixel" EndAngle="360" HorizontalAlignment="Left" Margin="0" Stretch="None" Stroke="{x:Null}" StartAngle="0" Width="10" VerticalAlignment="Center" Height="10" Fill="#FFAAAAAA" StrokeThickness="0"/>
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>

                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Opacity" TargetName="rec" Value="1"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="false" >
                        <Setter Property="Fill" TargetName="rec" Value="#FF40404B"/>
                        <Setter Property="Foreground" TargetName="textBlock" Value="#FFD5D5D5"/>
                        <Setter Property="Fill" TargetName="circ" Value="#FFB6B6B6"/>


                    </Trigger>
                    <Trigger Property="IsChecked" Value="true" >

                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="circ"   Duration="4" >
                                        <SplineThicknessKeyFrame KeyTime="0:0:00.1" Value="10,0,0,0" KeySpline="0.58,0,0.38,1"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>

                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard >
                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="circ"   Duration="4" >
                                        <SplineThicknessKeyFrame KeyTime="0:0:00.1" Value="2,0,0,0" KeySpline="0.62,0,0.31,1"/>
                                    </ThicknessAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                        <Setter Property="Fill" TargetName="rec" Value="#FFAE5E0D"/>

                        <!--<Setter Property="Foreground" TargetName="textBlock" Value="#FFFF8811"/>-->
                        <Setter Property="Fill" TargetName="circ" Value="#FFFF8A15"/>

                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>




        </ResourceDictionary>

    </Application.Resources>
</Application>
